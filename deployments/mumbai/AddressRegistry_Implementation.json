{
  "address": "0x08f81163e6b0c09d7401E4104b9FD4071F0336C8",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldGameRegistry",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newGameRegistry",
          "type": "address"
        }
      ],
      "name": "GameRegistryUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldMaintainer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMaintainer",
          "type": "address"
        }
      ],
      "name": "MaintainerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldOparcade",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOparcade",
          "type": "address"
        }
      ],
      "name": "OparcadeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldTimelock",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newTimelock",
          "type": "address"
        }
      ],
      "name": "TimelockUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "gameRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maintainer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oparcade",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gameRegistry",
          "type": "address"
        }
      ],
      "name": "updateGameRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_maintainer",
          "type": "address"
        }
      ],
      "name": "updateMaintainer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oparcade",
          "type": "address"
        }
      ],
      "name": "updateOparcade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_timelock",
          "type": "address"
        }
      ],
      "name": "updateTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa6d2c4f8337b73200d27f624b992dc1f4c55be0ca126ca312f9118addf183fe5",
  "receipt": {
    "to": null,
    "from": "0xaD733B7055eCAebFb3B38626f0148c5d12158F03",
    "contractAddress": "0x08f81163e6b0c09d7401E4104b9FD4071F0336C8",
    "transactionIndex": 5,
    "gasUsed": "610645",
    "logsBloom": "0x
    "blockHash": "0x59170d972e5338e0ea4c90306faf3091eb20452fe604a619567e7af2ed1d4065",
    "transactionHash": "0xa6d2c4f8337b73200d27f624b992dc1f4c55be0ca126ca312f9118addf183fe5",
    "logs": [
      {
        "transactionIndex": 5,
        "blockNumber": 27764151,
        "transactionHash": "0xa6d2c4f8337b73200d27f624b992dc1f4c55be0ca126ca312f9118addf183fe5",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000ad733b7055ecaebfb3b38626f0148c5d12158f03",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000056c722bc1045580000000000000000000000000000000000000000000000001ede171d2a5f900000000000000000000000000000000000000000000000246d5afac1ded578e4ab0000000000000000000000000000000000000000000000001e874ffa6e4f4aa800000000000000000000000000000000000000000000246d5b51890191892a03",
        "logIndex": 13,
        "blockHash": "0x59170d972e5338e0ea4c90306faf3091eb20452fe604a619567e7af2ed1d4065"
      }
    ],
    "blockNumber": 27764151,
    "cumulativeGasUsed": "859708",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "90450ff192f6db5913d3cec6d8efd383",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldGameRegistry\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGameRegistry\",\"type\":\"address\"}],\"name\":\"GameRegistryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMaintainer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMaintainer\",\"type\":\"address\"}],\"name\":\"MaintainerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOparcade\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOparcade\",\"type\":\"address\"}],\"name\":\"OparcadeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldTimelock\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTimelock\",\"type\":\"address\"}],\"name\":\"TimelockUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"gameRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maintainer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oparcade\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gameRegistry\",\"type\":\"address\"}],\"name\":\"updateGameRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_maintainer\",\"type\":\"address\"}],\"name\":\"updateMaintainer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oparcade\",\"type\":\"address\"}],\"name\":\"updateOparcade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_timelock\",\"type\":\"address\"}],\"name\":\"updateTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"David Lee\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateGameRegistry(address)\":{\"details\":\"Only owner\",\"params\":{\"_gameRegistry\":\"TokenRegistry contract address\"}},\"updateMaintainer(address)\":{\"details\":\"Only owner\",\"params\":{\"_maintainer\":\"Maintainer address\"}},\"updateOparcade(address)\":{\"details\":\"Only owner\",\"params\":{\"_oparcade\":\"Oparcade contract address\"}},\"updateTimelock(address)\":{\"details\":\"Only owner\",\"params\":{\"_timelock\":\"Maintainer address\"}}},\"stateVariables\":{\"gameRegistry\":{\"details\":\"GameRegistry contract address, can be zero if not set\"},\"maintainer\":{\"details\":\"Maintainer address, can be zero if not set\"},\"oparcade\":{\"details\":\"Oparcade contract address, can be zero if not set\"},\"timelock\":{\"details\":\"Timelock contract address, can be zero if not set\"}},\"title\":\"AddressRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"updateGameRegistry(address)\":{\"notice\":\"Update GameRegistry contract address\"},\"updateMaintainer(address)\":{\"notice\":\"Update maintainer address\"},\"updateOparcade(address)\":{\"notice\":\"Update Oparcade contract address\"},\"updateTimelock(address)\":{\"notice\":\"Update Timelock contract address\"}},\"notice\":\"This stores all addresses in the Oparcade\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AddressRegistry.sol\":\"AddressRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x9ffedb33e192f8821cbaead72596c79ea87fb28a73f8d3a9f5004449799f8e1b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x68861bcc80cacbd498efde75aab6c74a486cc48262660d326c8d7530d9752097\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f0f878c796dfc7feba6d3c4e3e526c14c7deae8b7bfc71088e3f38fab0d77b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x0b0d548f6381370d394f7a434f994dc678b3ef3e755de106109d61343a685ea7\",\"license\":\"MIT\"},\"contracts/AddressRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.11;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\n\\n/**\\n * @title AddressRegistry\\n * @notice This stores all addresses in the Oparcade\\n * @author David Lee\\n */\\ncontract AddressRegistry is OwnableUpgradeable {\\n  event OparcadeUpdated(address indexed oldOparcade, address indexed newOparcade);\\n  event GameRegistryUpdated(address indexed oldGameRegistry, address indexed newGameRegistry);\\n  event MaintainerUpdated(address indexed oldMaintainer, address indexed newMaintainer);\\n  event TimelockUpdated(address indexed oldTimelock, address indexed newTimelock);\\n\\n  /// @dev Oparcade contract address, can be zero if not set\\n  address public oparcade;\\n\\n  /// @dev GameRegistry contract address, can be zero if not set\\n  address public gameRegistry;\\n\\n  /// @dev Maintainer address, can be zero if not set\\n  address public maintainer;\\n\\n  /// @dev Timelock contract address, can be zero if not set\\n  address public timelock;\\n\\n  function initialize() public initializer {\\n    __Ownable_init();\\n  }\\n\\n  /**\\n   * @notice Update Oparcade contract address\\n   * @dev Only owner\\n   * @param _oparcade Oparcade contract address\\n   */\\n  function updateOparcade(address _oparcade) external onlyOwner {\\n    require(_oparcade != address(0), \\\"!Oparcade\\\");\\n\\n    emit OparcadeUpdated(oparcade, _oparcade);\\n\\n    oparcade = _oparcade;\\n  }\\n\\n  /**\\n   * @notice Update GameRegistry contract address\\n   * @dev Only owner\\n   * @param _gameRegistry TokenRegistry contract address\\n   */\\n  function updateGameRegistry(address _gameRegistry) external onlyOwner {\\n    require(_gameRegistry != address(0), \\\"!GameRegistry\\\");\\n\\n    emit GameRegistryUpdated(gameRegistry, _gameRegistry);\\n\\n    gameRegistry = _gameRegistry;\\n  }\\n\\n  /**\\n   * @notice Update maintainer address\\n   * @dev Only owner\\n   * @param _maintainer Maintainer address\\n   */\\n  function updateMaintainer(address _maintainer) external onlyOwner {\\n    require(_maintainer != address(0), \\\"!Maintainer\\\");\\n\\n    emit MaintainerUpdated(maintainer, _maintainer);\\n\\n    maintainer = _maintainer;\\n  }\\n\\n  /**\\n   * @notice Update Timelock contract address\\n   * @dev Only owner\\n   * @param _timelock Maintainer address\\n   */\\n  function updateTimelock(address _timelock) external onlyOwner {\\n    require(_timelock != address(0), \\\"!Timelock\\\");\\n\\n    emit TimelockUpdated(timelock, _timelock);\\n\\n    timelock = _timelock;\\n  }\\n}\\n\",\"keccak256\":\"0x1b636dcff3b5aa4620f5f7978fb372c2af10bb94d49a5465c5a612f490f3245b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610a1b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063a890c91011610081578063d81620251161005b578063d81620251461018a578063da0907551461019d578063f2fde38b146101b057600080fd5b8063a890c91014610151578063c6e628e314610164578063d33219b41461017757600080fd5b80638d374f25116100b25780638d374f25146100fe5780638da5cb5b1461012d5780639850d32b1461013e57600080fd5b8063205f9b5d146100d9578063715018a6146100ee5780638129fc1c146100f6575b600080fd5b6100ec6100e73660046109b5565b6101c3565b005b6100ec6102d4565b6100ec61033a565b606554610111906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6033546001600160a01b0316610111565b606754610111906001600160a01b031681565b6100ec61015f3660046109b5565b61040a565b6100ec6101723660046109b5565b610516565b606854610111906001600160a01b031681565b6100ec6101983660046109b5565b610622565b606654610111906001600160a01b031681565b6100ec6101be3660046109b5565b61072e565b6033546001600160a01b031633146102225760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b0381166102785760405162461bcd60e51b815260206004820152600960248201527f214f7061726361646500000000000000000000000000000000000000000000006044820152606401610219565b6065546040516001600160a01b038084169216907f7dc533a049cdd6f8ea9ca2c50750e4603fd8ffbaf136757bdebd45485f74974190600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b0316331461032e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610219565b6103386000610809565b565b600054610100900460ff166103555760005460ff1615610359565b303b155b6103cb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610219565b600054610100900460ff161580156103ed576000805461ffff19166101011790555b6103f561085b565b8015610407576000805461ff00191690555b50565b6033546001600160a01b031633146104645760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610219565b6001600160a01b0381166104ba5760405162461bcd60e51b815260206004820152600960248201527f2154696d656c6f636b00000000000000000000000000000000000000000000006044820152606401610219565b6068546040516001600160a01b038084169216907fae97011a27b5efe7b1d76fe38e75cc498fd64cc24e407a9c6b2185d27f611f7e90600090a3606880546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b031633146105705760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610219565b6001600160a01b0381166105c65760405162461bcd60e51b815260206004820152600b60248201527f214d61696e7461696e65720000000000000000000000000000000000000000006044820152606401610219565b6067546040516001600160a01b038084169216907f174fc41b7a8efa2e31922f56f59a2078d31cd34cfda6d34ccd7b99851e5eabc590600090a3606780546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b0316331461067c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610219565b6001600160a01b0381166106d25760405162461bcd60e51b815260206004820152600d60248201527f2147616d655265676973747279000000000000000000000000000000000000006044820152606401610219565b6066546040516001600160a01b038084169216907fbb1de5dfc6435683c75ae6ec02278b3a07398fa972883e6fc45072e867e9ca4090600090a3606680546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b031633146107885760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610219565b6001600160a01b0381166108045760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610219565b610407815b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166108c65760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610219565b6108ce6108d6565b610338610941565b600054610100900460ff166103385760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610219565b600054610100900460ff166109ac5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610219565b61033833610809565b6000602082840312156109c757600080fd5b81356001600160a01b03811681146109de57600080fd5b939250505056fea26469706673582212206c6434e6ef666747a516f473f823c7227bf8ac24049fe73f5384aa83d2250bc664736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100d45760003560e01c8063a890c91011610081578063d81620251161005b578063d81620251461018a578063da0907551461019d578063f2fde38b146101b057600080fd5b8063a890c91014610151578063c6e628e314610164578063d33219b41461017757600080fd5b80638d374f25116100b25780638d374f25146100fe5780638da5cb5b1461012d5780639850d32b1461013e57600080fd5b8063205f9b5d146100d9578063715018a6146100ee5780638129fc1c146100f6575b600080fd5b6100ec6100e73660046109b5565b6101c3565b005b6100ec6102d4565b6100ec61033a565b606554610111906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6033546001600160a01b0316610111565b606754610111906001600160a01b031681565b6100ec61015f3660046109b5565b61040a565b6100ec6101723660046109b5565b610516565b606854610111906001600160a01b031681565b6100ec6101983660046109b5565b610622565b606654610111906001600160a01b031681565b6100ec6101be3660046109b5565b61072e565b6033546001600160a01b031633146102225760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b0381166102785760405162461bcd60e51b815260206004820152600960248201527f214f7061726361646500000000000000000000000000000000000000000000006044820152606401610219565b6065546040516001600160a01b038084169216907f7dc533a049cdd6f8ea9ca2c50750e4603fd8ffbaf136757bdebd45485f74974190600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b0316331461032e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610219565b6103386000610809565b565b600054610100900460ff166103555760005460ff1615610359565b303b155b6103cb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610219565b600054610100900460ff161580156103ed576000805461ffff19166101011790555b6103f561085b565b8015610407576000805461ff00191690555b50565b6033546001600160a01b031633146104645760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610219565b6001600160a01b0381166104ba5760405162461bcd60e51b815260206004820152600960248201527f2154696d656c6f636b00000000000000000000000000000000000000000000006044820152606401610219565b6068546040516001600160a01b038084169216907fae97011a27b5efe7b1d76fe38e75cc498fd64cc24e407a9c6b2185d27f611f7e90600090a3606880546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b031633146105705760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610219565b6001600160a01b0381166105c65760405162461bcd60e51b815260206004820152600b60248201527f214d61696e7461696e65720000000000000000000000000000000000000000006044820152606401610219565b6067546040516001600160a01b038084169216907f174fc41b7a8efa2e31922f56f59a2078d31cd34cfda6d34ccd7b99851e5eabc590600090a3606780546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b0316331461067c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610219565b6001600160a01b0381166106d25760405162461bcd60e51b815260206004820152600d60248201527f2147616d655265676973747279000000000000000000000000000000000000006044820152606401610219565b6066546040516001600160a01b038084169216907fbb1de5dfc6435683c75ae6ec02278b3a07398fa972883e6fc45072e867e9ca4090600090a3606680546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b031633146107885760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610219565b6001600160a01b0381166108045760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610219565b610407815b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166108c65760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610219565b6108ce6108d6565b610338610941565b600054610100900460ff166103385760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610219565b600054610100900460ff166109ac5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610219565b61033833610809565b6000602082840312156109c757600080fd5b81356001600160a01b03811681146109de57600080fd5b939250505056fea26469706673582212206c6434e6ef666747a516f473f823c7227bf8ac24049fe73f5384aa83d2250bc664736f6c634300080b0033",
  "devdoc": {
    "author": "David Lee",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateGameRegistry(address)": {
        "details": "Only owner",
        "params": {
          "_gameRegistry": "TokenRegistry contract address"
        }
      },
      "updateMaintainer(address)": {
        "details": "Only owner",
        "params": {
          "_maintainer": "Maintainer address"
        }
      },
      "updateOparcade(address)": {
        "details": "Only owner",
        "params": {
          "_oparcade": "Oparcade contract address"
        }
      },
      "updateTimelock(address)": {
        "details": "Only owner",
        "params": {
          "_timelock": "Maintainer address"
        }
      }
    },
    "stateVariables": {
      "gameRegistry": {
        "details": "GameRegistry contract address, can be zero if not set"
      },
      "maintainer": {
        "details": "Maintainer address, can be zero if not set"
      },
      "oparcade": {
        "details": "Oparcade contract address, can be zero if not set"
      },
      "timelock": {
        "details": "Timelock contract address, can be zero if not set"
      }
    },
    "title": "AddressRegistry",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "updateGameRegistry(address)": {
        "notice": "Update GameRegistry contract address"
      },
      "updateMaintainer(address)": {
        "notice": "Update maintainer address"
      },
      "updateOparcade(address)": {
        "notice": "Update Oparcade contract address"
      },
      "updateTimelock(address)": {
        "notice": "Update Timelock contract address"
      }
    },
    "notice": "This stores all addresses in the Oparcade",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 132,
        "contract": "contracts/AddressRegistry.sol:AddressRegistry",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 135,
        "contract": "contracts/AddressRegistry.sol:AddressRegistry",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1444,
        "contract": "contracts/AddressRegistry.sol:AddressRegistry",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/AddressRegistry.sol:AddressRegistry",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 124,
        "contract": "contracts/AddressRegistry.sol:AddressRegistry",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 6170,
        "contract": "contracts/AddressRegistry.sol:AddressRegistry",
        "label": "oparcade",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 6173,
        "contract": "contracts/AddressRegistry.sol:AddressRegistry",
        "label": "gameRegistry",
        "offset": 0,
        "slot": "102",
        "type": "t_address"
      },
      {
        "astId": 6176,
        "contract": "contracts/AddressRegistry.sol:AddressRegistry",
        "label": "maintainer",
        "offset": 0,
        "slot": "103",
        "type": "t_address"
      },
      {
        "astId": 6179,
        "contract": "contracts/AddressRegistry.sol:AddressRegistry",
        "label": "timelock",
        "offset": 0,
        "slot": "104",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}