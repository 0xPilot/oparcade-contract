{
  "address": "0x8d16e117A83F8C0D9b573cd9079936bc97803141",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "by",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "oldBaseGameCreatorFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBaseGameCreatorFee",
          "type": "uint256"
        }
      ],
      "name": "BaseGameCreatorFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "by",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAmount",
          "type": "uint256"
        }
      ],
      "name": "DepositAmountUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "by",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "oldStatus",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "newStatus",
          "type": "bool"
        }
      ],
      "name": "DistributableTokenAddressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "by",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "gameName",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "gameCreator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "baseGameCreatorFee",
          "type": "uint256"
        }
      ],
      "name": "GameAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "by",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldGameCreator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newGameCreator",
          "type": "address"
        }
      ],
      "name": "GameCreatorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "by",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "gameName",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "gameCreator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "baseGameCreatorFee",
          "type": "uint256"
        }
      ],
      "name": "GameRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "by",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldPlatformFee",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPlatformFee",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "by",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "appliedGameCreatorFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tournamentCreatorFee",
          "type": "uint256"
        }
      ],
      "name": "TournamentCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "by",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldTournamentCreationFeeToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldTournamentCreationFeeAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newTournamentCreationFeeToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTournamentCreationFeeAmount",
          "type": "uint256"
        }
      ],
      "name": "TournamentCreationFeeUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_gameName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_gameCreator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_baseGameCreatorFee",
          "type": "uint256"
        }
      ],
      "name": "addGame",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "gid",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "addressRegistry",
      "outputs": [
        {
          "internalType": "contract IAddressRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "appliedGameCreatorFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "baseGameCreatorFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_proposedGameCreatorFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tournamentCreatorFee",
          "type": "uint256"
        }
      ],
      "name": "createTournamentByDAO",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tid",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_proposedGameCreatorFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tournamentCreatorFee",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_depositTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_depositTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenToAddPrizePool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountToAddPrizePool",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_nftAddressToAddPrizePool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_nftTypeToAddPrizePool",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenIdsToAddPrizePool",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amountsToAddPrizePool",
          "type": "uint256[]"
        }
      ],
      "name": "createTournamentByUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tid",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "depositTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "depositTokenList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "distributable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "distributableTokenList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gameCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "gameCreators",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "games",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gid",
          "type": "uint256"
        }
      ],
      "name": "getDepositTokenList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gid",
          "type": "uint256"
        }
      ],
      "name": "getDistributableTokenList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gid",
          "type": "uint256"
        }
      ],
      "name": "getTournamentCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tid",
          "type": "uint256"
        }
      ],
      "name": "getTournamentCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addressRegistry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_feeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFee",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tournamentCreationFeeToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tournamentCreationFeeAmount",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isDeprecatedGame",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "platformFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gid",
          "type": "uint256"
        }
      ],
      "name": "removeGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tournamentCreationFeeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tournamentCreationFeeToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tournamentCreatorFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tournamentCreators",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_baseGameCreatorFee",
          "type": "uint256"
        }
      ],
      "name": "updateBaseGameCreatorFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "updateDepositTokenAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isDistributable",
          "type": "bool"
        }
      ],
      "name": "updateDistributableTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_gameCreator",
          "type": "address"
        }
      ],
      "name": "updateGameCreator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFee",
          "type": "uint256"
        }
      ],
      "name": "updatePlatformFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tournamentCreationFeeToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tournamentCreationFeeAmount",
          "type": "uint256"
        }
      ],
      "name": "updateTournamentCreationFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xcf09aeb047f55dc138564cb65f55e4ff5bfebe820d5ff59ebb47fac30663b60f",
  "receipt": {
    "to": null,
    "from": "0x8f96BFc80BC3B7D881767253EDb7A76429B7EC6B",
    "contractAddress": "0x8d16e117A83F8C0D9b573cd9079936bc97803141",
    "transactionIndex": 0,
    "gasUsed": "2641895",
    "logsBloom": "0x
    "blockHash": "0x348b0ef14d5c53dcc2602a72c25cd6632bc394ec412836f0a31e074b154f420e",
    "transactionHash": "0xcf09aeb047f55dc138564cb65f55e4ff5bfebe820d5ff59ebb47fac30663b60f",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 26786097,
        "transactionHash": "0xcf09aeb047f55dc138564cb65f55e4ff5bfebe820d5ff59ebb47fac30663b60f",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000008f96bfc80bc3b7d881767253edb7a76429b7ec6b",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x00000000000000000000000000000000000000000000000001776f94850c620d00000000000000000000000000000000000000000000000006bccfbdc45b938d000000000000000000000000000000000000000000000ec6895a0b6af49b1654000000000000000000000000000000000000000000000000054560293f4f3180000000000000000000000000000000000000000000000ec68ad17aff79a77861",
        "logIndex": 0,
        "blockHash": "0x348b0ef14d5c53dcc2602a72c25cd6632bc394ec412836f0a31e074b154f420e"
      }
    ],
    "blockNumber": 26786097,
    "cumulativeGasUsed": "2641895",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "59920b8e96a3b80037a0cc75c09b417f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldBaseGameCreatorFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBaseGameCreatorFee\",\"type\":\"uint256\"}],\"name\":\"BaseGameCreatorFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"DepositAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"oldStatus\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newStatus\",\"type\":\"bool\"}],\"name\":\"DistributableTokenAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"gameName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"gameCreator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseGameCreatorFee\",\"type\":\"uint256\"}],\"name\":\"GameAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldGameCreator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newGameCreator\",\"type\":\"address\"}],\"name\":\"GameCreatorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"gameName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"gameCreator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseGameCreatorFee\",\"type\":\"uint256\"}],\"name\":\"GameRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPlatformFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPlatformFee\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gid\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"appliedGameCreatorFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tournamentCreatorFee\",\"type\":\"uint256\"}],\"name\":\"TournamentCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldTournamentCreationFeeToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTournamentCreationFeeAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTournamentCreationFeeToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTournamentCreationFeeAmount\",\"type\":\"uint256\"}],\"name\":\"TournamentCreationFeeUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_gameName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_gameCreator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_baseGameCreatorFee\",\"type\":\"uint256\"}],\"name\":\"addGame\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gid\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressRegistry\",\"outputs\":[{\"internalType\":\"contract IAddressRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"appliedGameCreatorFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"baseGameCreatorFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_proposedGameCreatorFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tournamentCreatorFee\",\"type\":\"uint256\"}],\"name\":\"createTournamentByDAO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tid\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_proposedGameCreatorFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tournamentCreatorFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_depositTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_depositTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenToAddPrizePool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountToAddPrizePool\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_nftAddressToAddPrizePool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftTypeToAddPrizePool\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIdsToAddPrizePool\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amountsToAddPrizePool\",\"type\":\"uint256[]\"}],\"name\":\"createTournamentByUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tid\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"depositTokenList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"distributable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"distributableTokenList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gameCreators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"games\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gid\",\"type\":\"uint256\"}],\"name\":\"getDepositTokenList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gid\",\"type\":\"uint256\"}],\"name\":\"getDistributableTokenList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gid\",\"type\":\"uint256\"}],\"name\":\"getTournamentCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tid\",\"type\":\"uint256\"}],\"name\":\"getTournamentCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tournamentCreationFeeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tournamentCreationFeeAmount\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isDeprecatedGame\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gid\",\"type\":\"uint256\"}],\"name\":\"removeGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tournamentCreationFeeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tournamentCreationFeeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tournamentCreatorFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tournamentCreators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_baseGameCreatorFee\",\"type\":\"uint256\"}],\"name\":\"updateBaseGameCreatorFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"updateDepositTokenAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isDistributable\",\"type\":\"bool\"}],\"name\":\"updateDistributableTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_gameCreator\",\"type\":\"address\"}],\"name\":\"updateGameCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFee\",\"type\":\"uint256\"}],\"name\":\"updatePlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tournamentCreationFeeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tournamentCreationFeeAmount\",\"type\":\"uint256\"}],\"name\":\"updateTournamentCreationFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"David Lee\",\"kind\":\"dev\",\"methods\":{\"addGame(string,address,uint256)\":{\"params\":{\"_baseGameCreatorFee\":\"Base game creator fee\",\"_gameCreator\":\"Game creator address\",\"_gameName\":\"Game name to add\"}},\"createTournamentByDAO(uint256,uint256,uint256)\":{\"details\":\"Only ownerIf the proposed game creaetor fee is 0, the base game creator fee is appliedThe prize pool for the tournament that the owner created is initialized on Oparcade contract\",\"params\":{\"_gid\":\"Game ID\",\"_proposedGameCreatorFee\":\"Proposed game creator fee\",\"_tournamentCreatorFee\":\"Tournament creator fee\"},\"returns\":{\"tid\":\"Tournament ID created\"}},\"createTournamentByUser(uint256,uint256,uint256,address,uint256,address,uint256,address,uint256,uint256[],uint256[])\":{\"details\":\"Anyone can create the tournament and initialize the prize pool with tokens and NFTsTournament creator should set all params necessary for the tournament in 1 tx andthe params set is immutableTournament creator should pay fees to create the tournamentand the fee token address and fee token amount are set by the ownerIf the proposed game creaetor fee is 0, the base game creator fee is appliedNFT type to initialize the prize pool should be either 721 or 1155\",\"params\":{\"_amountToAddPrizePool\":\"Token amount to initialize the prize pool\",\"_amountsToAddPrizePool\":\"NFT token amount list to initialize the prize pool\",\"_depositTokenAddress\":\"Deposit token address for playing the tournament\",\"_depositTokenAmount\":\"Deposit token amount for playing the tournament\",\"_gid\":\"Game ID\",\"_nftAddressToAddPrizePool\":\"NFT address to initialize the prize pool\",\"_nftTypeToAddPrizePool\":\"NFT type to initialize the prize pool\",\"_proposedGameCreatorFee\":\"Tournament creator fee\",\"_tokenIdsToAddPrizePool\":\"NFT token Id list to initialize the prize pool\",\"_tokenToAddPrizePool\":\"Token address to initialize the prize pool\"},\"returns\":{\"tid\":\"Tournament ID created\"}},\"gameCount()\":{\"returns\":{\"_0\":\"(uint256) Game count created\"}},\"getDepositTokenList(uint256)\":{\"params\":{\"_gid\":\"Game ID\"},\"returns\":{\"_0\":\"(address[]) Deposit token list of the game\"}},\"getDistributableTokenList(uint256)\":{\"params\":{\"\":\"(address[]) Distributable token list of the game\",\"_gid\":\"Game ID\"}},\"getTournamentCount(uint256)\":{\"params\":{\"_gid\":\"Game ID\"},\"returns\":{\"_0\":\"(uint256) Number of the tournament\"}},\"getTournamentCreator(uint256,uint256)\":{\"params\":{\"_gid\":\"Game ID\",\"_tid\":\"Tournament ID\"},\"returns\":{\"_0\":\"(address) Tournament creator address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeGame(uint256)\":{\"details\":\"Game is not removed from the games array, just set it deprecated\",\"params\":{\"_gid\":\"Game ID\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateBaseGameCreatorFee(uint256,uint256)\":{\"details\":\"Tournament creator fee is the royality that will be transferred to the tournament creator addressTournament creator can propose the game creator fee when creating the tournamentbut it can't be less than the base game creator fee\",\"params\":{\"_baseGameCreatorFee\":\"Base game creator fee\",\"_gid\":\"Game ID\"}},\"updateDepositTokenAmount(uint256,uint256,address,uint256)\":{\"details\":\"Only ownerOnly tokens with an amount greater than zero is valid for the deposit\",\"params\":{\"_amount\":\"Token amount\",\"_gid\":\"Game ID\",\"_tid\":\"Tournament ID\",\"_token\":\"Token address to allow/disallow the deposit\"}},\"updateDistributableTokenAddress(uint256,address,bool)\":{\"details\":\"Only owner\",\"params\":{\"_gid\":\"Game ID\",\"_isDistributable\":\"true: distributable false: not distributable\",\"_token\":\"Token address to allow/disallow the deposit\"}},\"updateGameCreator(uint256,address)\":{\"params\":{\"_gameCreator\":\"Game creator address\",\"_gid\":\"Game ID\"}},\"updatePlatformFee(address,uint256)\":{\"details\":\"Only ownerAllow zero recipient address only of fee is also zero\",\"params\":{\"_feeRecipient\":\"Platform fee recipient address\",\"_platformFee\":\"platform fee\"}},\"updateTournamentCreationFee(address,uint256)\":{\"details\":\"Only ownerTournament creator should pay this fee when creating the tournament\",\"params\":{\"_tournamentCreationFeeAmount\":\"Fee token amount\",\"_tournamentCreationFeeToken\":\"Fee token address\"}}},\"stateVariables\":{\"addressRegistry\":{\"details\":\"AddressRegistry\"},\"appliedGameCreatorFees\":{\"details\":\"Game ID -> Tournament ID -> Game creator fee applied to the tournament\"},\"baseGameCreatorFees\":{\"details\":\"Game ID -> Base game creator fee\"},\"depositTokenAmount\":{\"details\":\"Game ID -> Tournament ID -> Token address -> Deposit amount\"},\"depositTokenList\":{\"details\":\"Game ID -> Deposit token list\"},\"distributable\":{\"details\":\"Game ID -> Token address -> Bool\"},\"distributableTokenList\":{\"details\":\"Game ID -> Distributable token list\"},\"feeRecipient\":{\"details\":\"Platform fee recipient\"},\"gameCreators\":{\"details\":\"Game ID -> Game creator\"},\"games\":{\"details\":\"Game name array\"},\"isDeprecatedGame\":{\"details\":\"Game ID -> Bool\"},\"platformFee\":{\"details\":\"Platform fee\"},\"tournamentCreationFeeAmount\":{\"details\":\"Tournament creation fee token amount\"},\"tournamentCreationFeeToken\":{\"details\":\"Tournament creation fee token address\"},\"tournamentCreatorFees\":{\"details\":\"Game ID -> Tournament ID -> Tournament creator fee\"},\"tournamentCreators\":{\"details\":\"Game ID -> Tournament creator list\"}},\"title\":\"GameRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addGame(string,address,uint256)\":{\"notice\":\"Add the new game\"},\"createTournamentByDAO(uint256,uint256,uint256)\":{\"notice\":\"Create the tournament\"},\"createTournamentByUser(uint256,uint256,uint256,address,uint256,address,uint256,address,uint256,uint256[],uint256[])\":{\"notice\":\"Create the tournament\"},\"gameCount()\":{\"notice\":\"Returns the number of games added in games array\"},\"getDepositTokenList(uint256)\":{\"notice\":\"Returns the deposit token list of the game\"},\"getDistributableTokenList(uint256)\":{\"notice\":\"Returns the distributable token list of the game\"},\"getTournamentCount(uint256)\":{\"notice\":\"Returns the number of the tournaments of the specific game\"},\"getTournamentCreator(uint256,uint256)\":{\"notice\":\"Returns the tournament creator address of the specific game/tournament\"},\"removeGame(uint256)\":{\"notice\":\"Remove the exising game\"},\"updateBaseGameCreatorFee(uint256,uint256)\":{\"notice\":\"Update the base game creator fee\"},\"updateDepositTokenAmount(uint256,uint256,address,uint256)\":{\"notice\":\"Update deposit token amount\"},\"updateDistributableTokenAddress(uint256,address,bool)\":{\"notice\":\"Update distributable token address\"},\"updateGameCreator(uint256,address)\":{\"notice\":\"Update the game creator\"},\"updatePlatformFee(address,uint256)\":{\"notice\":\"Update the platform fee\"},\"updateTournamentCreationFee(address,uint256)\":{\"notice\":\"Update the tournament creation fee\"}},\"notice\":\"This contract stores all info related to the game and tournament\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GameRegistry.sol\":\"GameRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = _setInitializedVersion(1);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        bool isTopLevelCall = _setInitializedVersion(version);\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(version);\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        _setInitializedVersion(type(uint8).max);\\n    }\\n\\n    function _setInitializedVersion(uint8 version) private returns (bool) {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, and for the lowest level\\n        // of initializers, because in other contexts the contract may have been reentered.\\n        if (_initializing) {\\n            require(\\n                version == 1 && !AddressUpgradeable.isContract(address(this)),\\n                \\\"Initializable: contract is already initialized\\\"\\n            );\\n            return false;\\n        } else {\\n            require(_initialized < version, \\\"Initializable: contract is already initialized\\\");\\n            _initialized = version;\\n            return true;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"contracts/GameRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\nimport \\\"./interfaces/IAddressRegistry.sol\\\";\\nimport \\\"./interfaces/IOparcade.sol\\\";\\n\\n/**\\n * @title GameRegistry\\n * @notice This contract stores all info related to the game and tournament\\n * @author David Lee\\n */\\ncontract GameRegistry is OwnableUpgradeable {\\n  using SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n  event GameAdded(\\n    address indexed by,\\n    uint256 indexed gid,\\n    string gameName,\\n    address indexed gameCreator,\\n    uint256 baseGameCreatorFee\\n  );\\n  event GameRemoved(\\n    address indexed by,\\n    uint256 indexed gid,\\n    string gameName,\\n    address indexed gameCreator,\\n    uint256 baseGameCreatorFee\\n  );\\n  event GameCreatorUpdated(\\n    address indexed by,\\n    uint256 indexed gid,\\n    address indexed oldGameCreator,\\n    address newGameCreator\\n  );\\n  event BaseGameCreatorFeeUpdated(\\n    address indexed by,\\n    uint256 indexed gid,\\n    uint256 indexed oldBaseGameCreatorFee,\\n    uint256 newBaseGameCreatorFee\\n  );\\n  event TournamentCreated(\\n    address indexed by,\\n    uint256 indexed gid,\\n    uint256 indexed tid,\\n    uint256 appliedGameCreatorFee,\\n    uint256 tournamentCreatorFee\\n  );\\n  event DepositAmountUpdated(\\n    address indexed by,\\n    uint256 indexed gid,\\n    uint256 indexed tid,\\n    address token,\\n    uint256 oldAmount,\\n    uint256 newAmount\\n  );\\n  event DistributableTokenAddressUpdated(\\n    address indexed by,\\n    uint256 indexed gid,\\n    address indexed token,\\n    bool oldStatus,\\n    bool newStatus\\n  );\\n  event PlatformFeeUpdated(\\n    address indexed by,\\n    address indexed oldFeeRecipient,\\n    uint256 oldPlatformFee,\\n    address indexed newFeeRecipient,\\n    uint256 newPlatformFee\\n  );\\n  event TournamentCreationFeeUpdated(\\n    address indexed by,\\n    address indexed oldTournamentCreationFeeToken,\\n    uint256 oldTournamentCreationFeeAmount,\\n    address indexed newTournamentCreationFeeToken,\\n    uint256 newTournamentCreationFeeAmount\\n  );\\n\\n  /// @dev Game name array\\n  string[] public games;\\n\\n  /// @dev Game ID -> Game creator\\n  mapping(uint256 => address) public gameCreators;\\n\\n  /// @dev Game ID -> Base game creator fee\\n  mapping(uint256 => uint256) public baseGameCreatorFees;\\n\\n  /// @dev Game ID -> Tournament ID -> Game creator fee applied to the tournament\\n  mapping(uint256 => mapping(uint256 => uint256)) public appliedGameCreatorFees;\\n\\n  /// @dev Game ID -> Tournament creator list\\n  mapping(uint256 => address[]) public tournamentCreators;\\n\\n  /// @dev Game ID -> Tournament ID -> Tournament creator fee\\n  mapping(uint256 => mapping(uint256 => uint256)) public tournamentCreatorFees;\\n\\n  /// @dev Game ID -> Deposit token list\\n  mapping(uint256 => address[]) public depositTokenList;\\n\\n  /// @dev Game ID -> Tournament ID -> Token address -> Deposit amount\\n  mapping(uint256 => mapping(uint256 => mapping(address => uint256))) public depositTokenAmount;\\n\\n  /// @dev Game ID -> Distributable token list\\n  mapping(uint256 => address[]) public distributableTokenList;\\n\\n  /// @dev Game ID -> Token address -> Bool\\n  mapping(uint256 => mapping(address => bool)) public distributable;\\n\\n  /// @dev Game ID -> Bool\\n  mapping(uint256 => bool) public isDeprecatedGame;\\n\\n  /// @dev AddressRegistry\\n  IAddressRegistry public addressRegistry;\\n\\n  /// @dev Platform fee recipient\\n  address public feeRecipient;\\n\\n  /// @dev Platform fee\\n  uint256 public platformFee;\\n\\n  /// @dev Tournament creation fee token address\\n  address public tournamentCreationFeeToken;\\n\\n  /// @dev Tournament creation fee token amount\\n  uint256 public tournamentCreationFeeAmount;\\n\\n  modifier onlyValidGID(uint256 _gid) {\\n    require(_gid < games.length && isDeprecatedGame[_gid] == false, \\\"Invalid game index\\\");\\n    _;\\n  }\\n\\n  modifier onlyValidTID(uint256 _gid, uint256 _tid) {\\n    require(_tid < tournamentCreators[_gid].length, \\\"Invalid tournament index\\\");\\n    _;\\n  }\\n\\n  function initialize(\\n    address _addressRegistry,\\n    address _feeRecipient,\\n    uint256 _platformFee,\\n    address _tournamentCreationFeeToken,\\n    uint256 _tournamentCreationFeeAmount\\n  ) public initializer {\\n    __Ownable_init();\\n\\n    require(_feeRecipient != address(0) || _platformFee == 0, \\\"Fee recipient not set\\\");\\n    require(_platformFee <= 1000, \\\"Platform fee exceeded\\\");\\n\\n    // initialize AddressRegistery\\n    addressRegistry = IAddressRegistry(_addressRegistry);\\n\\n    // initialize fee and recipient\\n    feeRecipient = _feeRecipient;\\n    platformFee = _platformFee;\\n    tournamentCreationFeeToken = _tournamentCreationFeeToken;\\n    tournamentCreationFeeAmount = _tournamentCreationFeeAmount;\\n  }\\n\\n  /**\\n   * @notice Add the new game\\n   * @param _gameName Game name to add\\n   * @param _gameCreator Game creator address\\n   * @param _baseGameCreatorFee Base game creator fee\\n   */\\n  function addGame(\\n    string calldata _gameName,\\n    address _gameCreator,\\n    uint256 _baseGameCreatorFee\\n  ) external onlyOwner returns (uint256 gid) {\\n    require(bytes(_gameName).length != 0, \\\"Empty game name\\\");\\n    require(_gameCreator != address(0), \\\"Zero game creator address\\\");\\n    require(platformFee + _baseGameCreatorFee < 1000, \\\"Exceeded base game creator fee\\\");\\n\\n    // add the game\\n    games.push(_gameName);\\n\\n    // set the gid\\n    gid = games.length - 1;\\n\\n    // set the game creator address and fee\\n    gameCreators[gid] = _gameCreator;\\n    baseGameCreatorFees[gid] = _baseGameCreatorFee;\\n\\n    emit GameAdded(msg.sender, gid, _gameName, _gameCreator, _baseGameCreatorFee);\\n  }\\n\\n  /**\\n   * @notice Remove the exising game\\n   * @dev Game is not removed from the games array, just set it deprecated\\n   * @param _gid Game ID\\n   */\\n  function removeGame(uint256 _gid) external onlyOwner onlyValidGID(_gid) {\\n    // remove game\\n    isDeprecatedGame[_gid] = true;\\n\\n    emit GameRemoved(msg.sender, _gid, games[_gid], gameCreators[_gid], baseGameCreatorFees[_gid]);\\n  }\\n\\n  /**\\n   * @notice Update the game creator\\n   * @param _gid Game ID\\n   * @param _gameCreator Game creator address\\n   */\\n  function updateGameCreator(uint256 _gid, address _gameCreator) external onlyValidGID(_gid) {\\n    require(msg.sender == gameCreators[_gid], \\\"Only game creator\\\");\\n    require(_gameCreator != address(0), \\\"Zero game creator address\\\");\\n\\n    emit GameCreatorUpdated(msg.sender, _gid, gameCreators[_gid], _gameCreator);\\n\\n    // update the game creator address\\n    gameCreators[_gid] = _gameCreator;\\n  }\\n\\n  /**\\n   * @notice Update the base game creator fee\\n   * @dev Tournament creator fee is the royality that will be transferred to the tournament creator address\\n   * @dev Tournament creator can propose the game creator fee when creating the tournament\\n   * @dev but it can't be less than the base game creator fee\\n   * @param _gid Game ID\\n   * @param _baseGameCreatorFee Base game creator fee\\n   */\\n  function updateBaseGameCreatorFee(uint256 _gid, uint256 _baseGameCreatorFee) external onlyOwner onlyValidGID(_gid) {\\n    require(platformFee + _baseGameCreatorFee < 1000, \\\"Exceeded game creator fee\\\");\\n\\n    emit BaseGameCreatorFeeUpdated(msg.sender, _gid, baseGameCreatorFees[_gid], _baseGameCreatorFee);\\n\\n    // update the game creator fee\\n    baseGameCreatorFees[_gid] = _baseGameCreatorFee;\\n  }\\n\\n  /**\\n   * @notice Create the tournament\\n   * @dev Only owner\\n   * @dev If the proposed game creaetor fee is 0, the base game creator fee is applied\\n   * @dev The prize pool for the tournament that the owner created is initialized on Oparcade contract\\n   * @param _gid Game ID\\n   * @param _proposedGameCreatorFee Proposed game creator fee\\n   * @param _tournamentCreatorFee Tournament creator fee\\n   * @return tid Tournament ID created\\n   */\\n  function createTournamentByDAO(\\n    uint256 _gid,\\n    uint256 _proposedGameCreatorFee,\\n    uint256 _tournamentCreatorFee\\n  ) external onlyOwner onlyValidGID(_gid) returns (uint256 tid) {\\n    tid = _createTournament(_gid, _proposedGameCreatorFee, _tournamentCreatorFee);\\n  }\\n\\n  /**\\n   * @notice Create the tournament\\n   * @dev If the proposed game creaetor fee is 0, the base game creator fee is applied\\n   * @param _gid Game ID\\n   * @param _proposedGameCreatorFee Proposed game creator fee\\n   * @param _tournamentCreatorFee Tournament creator fee\\n   * @return tid Tournament ID created\\n   */\\n  function _createTournament(\\n    uint256 _gid,\\n    uint256 _proposedGameCreatorFee,\\n    uint256 _tournamentCreatorFee\\n  ) internal returns (uint256 tid) {\\n    // use baseCreatorFee if _proposedGameCreatorFee is zero\\n    uint256 appliedGameCreatorFee;\\n    if (_proposedGameCreatorFee == 0) {\\n      appliedGameCreatorFee = baseGameCreatorFees[_gid];\\n    } else {\\n      appliedGameCreatorFee = _proposedGameCreatorFee;\\n    }\\n\\n    // check fees\\n    require(baseGameCreatorFees[_gid] <= appliedGameCreatorFee, \\\"Low game creator fee proposed\\\");\\n    require(platformFee + appliedGameCreatorFee + _tournamentCreatorFee < 1000, \\\"Exceeded fees\\\");\\n\\n    // get the new tournament ID\\n    tid = tournamentCreators[_gid].length;\\n\\n    // add the tournament creator address and fee\\n    tournamentCreators[_gid].push(msg.sender);\\n    appliedGameCreatorFees[_gid][tid] = appliedGameCreatorFee;\\n    tournamentCreatorFees[_gid][tid] = _tournamentCreatorFee;\\n\\n    emit TournamentCreated(msg.sender, _gid, tid, appliedGameCreatorFee, _tournamentCreatorFee);\\n  }\\n\\n  /**\\n   * @notice Create the tournament\\n   * @dev Anyone can create the tournament and initialize the prize pool with tokens and NFTs\\n   * @dev Tournament creator should set all params necessary for the tournament in 1 tx and\\n   * @dev the params set is immutable\\n   * @dev Tournament creator should pay fees to create the tournament\\n   * @dev and the fee token address and fee token amount are set by the owner\\n   * @dev If the proposed game creaetor fee is 0, the base game creator fee is applied\\n   * @dev NFT type to initialize the prize pool should be either 721 or 1155\\n   * @param _gid Game ID\\n   * @param _proposedGameCreatorFee Proposed game creator fee\\n   * @param _proposedGameCreatorFee Tournament creator fee\\n   * @param _depositTokenAddress Deposit token address for playing the tournament\\n   * @param _depositTokenAmount Deposit token amount for playing the tournament\\n   * @param _tokenToAddPrizePool Token address to initialize the prize pool\\n   * @param _amountToAddPrizePool Token amount to initialize the prize pool\\n   * @param _nftAddressToAddPrizePool NFT address to initialize the prize pool\\n   * @param _nftTypeToAddPrizePool NFT type to initialize the prize pool\\n   * @param _tokenIdsToAddPrizePool NFT token Id list to initialize the prize pool\\n   * @param _amountsToAddPrizePool NFT token amount list to initialize the prize pool\\n   * @return tid Tournament ID created\\n   */\\n  function createTournamentByUser(\\n    uint256 _gid,\\n    uint256 _proposedGameCreatorFee,\\n    uint256 _tournamentCreatorFee,\\n    address _depositTokenAddress,\\n    uint256 _depositTokenAmount,\\n    address _tokenToAddPrizePool,\\n    uint256 _amountToAddPrizePool,\\n    address _nftAddressToAddPrizePool,\\n    uint256 _nftTypeToAddPrizePool,\\n    uint256[] memory _tokenIdsToAddPrizePool,\\n    uint256[] memory _amountsToAddPrizePool\\n  ) external onlyValidGID(_gid) returns (uint256 tid) {\\n    // pay the tournament creation fee\\n    IERC20Upgradeable(tournamentCreationFeeToken).safeTransferFrom(\\n      msg.sender,\\n      feeRecipient,\\n      tournamentCreationFeeAmount\\n    );\\n\\n    // create new tournament\\n    tid = _createTournament(_gid, _proposedGameCreatorFee, _tournamentCreatorFee);\\n\\n    // set the deposit token amount\\n    _updateDepositTokenAmount(_gid, tid, _depositTokenAddress, _depositTokenAmount);\\n\\n    // set the distributable token\\n    if (distributable[_gid][_depositTokenAddress] == false && _depositTokenAmount > 0) {\\n      _updateDistributableTokenAddress(_gid, _depositTokenAddress, true);\\n    }\\n    if (distributable[_gid][_tokenToAddPrizePool] == false && _amountToAddPrizePool > 0) {\\n      _updateDistributableTokenAddress(_gid, _tokenToAddPrizePool, true);\\n    }\\n    if (distributable[_gid][_nftAddressToAddPrizePool] == false && _amountsToAddPrizePool.length > 0) {\\n      _updateDistributableTokenAddress(_gid, _nftAddressToAddPrizePool, true);\\n    }\\n\\n    // initialize the prize pool with tokens\\n    if (_amountToAddPrizePool > 0) {\\n      IOparcade(addressRegistry.oparcade()).depositPrize(\\n        msg.sender,\\n        _gid,\\n        tid,\\n        _tokenToAddPrizePool,\\n        _amountToAddPrizePool\\n      );\\n    }\\n\\n    // initialize the prize pool with NFTs\\n    if (_nftTypeToAddPrizePool == 721 || _nftTypeToAddPrizePool == 1155) {\\n      IOparcade(addressRegistry.oparcade()).depositNFTPrize(\\n        msg.sender,\\n        _gid,\\n        tid,\\n        _nftAddressToAddPrizePool,\\n        _nftTypeToAddPrizePool,\\n        _tokenIdsToAddPrizePool,\\n        _amountsToAddPrizePool\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @notice Update deposit token amount\\n   * @dev Only owner\\n   * @dev Only tokens with an amount greater than zero is valid for the deposit\\n   * @param _gid Game ID\\n   * @param _tid Tournament ID\\n   * @param _token Token address to allow/disallow the deposit\\n   * @param _amount Token amount\\n   */\\n  function updateDepositTokenAmount(\\n    uint256 _gid,\\n    uint256 _tid,\\n    address _token,\\n    uint256 _amount\\n  ) external onlyOwner onlyValidGID(_gid) onlyValidTID(_gid, _tid) {\\n    _updateDepositTokenAmount(_gid, _tid, _token, _amount);\\n  }\\n\\n  /**\\n   * @notice Update deposit token amount\\n   * @dev Only tokens with an amount greater than zero is valid for the deposit\\n   * @param _gid Game ID\\n   * @param _tid Tournament ID\\n   * @param _token Token address to allow/disallow the deposit\\n   * @param _amount Token amount\\n   */\\n  function _updateDepositTokenAmount(\\n    uint256 _gid,\\n    uint256 _tid,\\n    address _token,\\n    uint256 _amount\\n  ) internal {\\n    emit DepositAmountUpdated(msg.sender, _gid, _tid, _token, depositTokenAmount[_gid][_tid][_token], _amount);\\n\\n    // update deposit token list\\n    if (_amount > 0) {\\n      if (depositTokenAmount[_gid][_tid][_token] == 0) {\\n        // add the token into the list only if it's added newly\\n        depositTokenList[_gid].push(_token);\\n      }\\n    } else {\\n      for (uint256 i; i < depositTokenList[_gid].length; i++) {\\n        if (_token == depositTokenList[_gid][i]) {\\n          // remove the token from the list\\n          depositTokenList[_gid][i] = depositTokenList[_gid][depositTokenList[_gid].length - 1];\\n          depositTokenList[_gid].pop();\\n          break;\\n        }\\n      }\\n    }\\n\\n    // update deposit token amount\\n    depositTokenAmount[_gid][_tid][_token] = _amount;\\n  }\\n\\n  /**\\n   * @notice Update distributable token address\\n   * @dev Only owner\\n   * @param _gid Game ID\\n   * @param _token Token address to allow/disallow the deposit\\n   * @param _isDistributable true: distributable false: not distributable\\n   */\\n  function updateDistributableTokenAddress(\\n    uint256 _gid,\\n    address _token,\\n    bool _isDistributable\\n  ) external onlyOwner onlyValidGID(_gid) {\\n    _updateDistributableTokenAddress(_gid, _token, _isDistributable);\\n  }\\n\\n  /**\\n   * @notice Update distributable token address\\n   * @dev Only owner\\n   * @param _gid Game ID\\n   * @param _token Token address to allow/disallow the deposit\\n   * @param _isDistributable true: distributable false: not distributable\\n   */\\n  function _updateDistributableTokenAddress(\\n    uint256 _gid,\\n    address _token,\\n    bool _isDistributable\\n  ) internal {\\n    emit DistributableTokenAddressUpdated(msg.sender, _gid, _token, distributable[_gid][_token], _isDistributable);\\n\\n    // update distributable token list\\n    if (_isDistributable) {\\n      if (!distributable[_gid][_token]) {\\n        // add token to the list only if it's added newly\\n        distributableTokenList[_gid].push(_token);\\n      }\\n    } else {\\n      for (uint256 i; i < distributableTokenList[_gid].length; i++) {\\n        if (_token == distributableTokenList[_gid][i]) {\\n          distributableTokenList[_gid][i] = distributableTokenList[_gid][distributableTokenList[_gid].length - 1];\\n          distributableTokenList[_gid].pop();\\n          break;\\n        }\\n      }\\n    }\\n\\n    // update distributable token amount\\n    distributable[_gid][_token] = _isDistributable;\\n  }\\n\\n  /**\\n   * @notice Returns the deposit token list of the game\\n   * @param _gid Game ID\\n   * @return (address[]) Deposit token list of the game\\n   */\\n  function getDepositTokenList(uint256 _gid) external view returns (address[] memory) {\\n    return depositTokenList[_gid];\\n  }\\n\\n  /**\\n   * @notice Returns the distributable token list of the game\\n   * @param _gid Game ID\\n   * @param (address[]) Distributable token list of the game\\n   */\\n  function getDistributableTokenList(uint256 _gid) external view returns (address[] memory) {\\n    return distributableTokenList[_gid];\\n  }\\n\\n  /**\\n   * @notice Returns the number of games added in games array\\n   * @return (uint256) Game count created\\n   */\\n  function gameCount() external view returns (uint256) {\\n    return games.length;\\n  }\\n\\n  /**\\n   * @notice Returns the number of the tournaments of the specific game\\n   * @param _gid Game ID\\n   * @return (uint256) Number of the tournament\\n   */\\n  function getTournamentCount(uint256 _gid) external view onlyValidGID(_gid) returns (uint256) {\\n    return tournamentCreators[_gid].length;\\n  }\\n\\n  /**\\n   * @notice Returns the tournament creator address of the specific game/tournament\\n   * @param _gid Game ID\\n   * @param _tid Tournament ID\\n   * @return (address) Tournament creator address\\n   */\\n  function getTournamentCreator(uint256 _gid, uint256 _tid)\\n    external\\n    view\\n    onlyValidGID(_gid)\\n    onlyValidTID(_gid, _tid)\\n    returns (address)\\n  {\\n    return tournamentCreators[_gid][_tid];\\n  }\\n\\n  /**\\n   * @notice Update the platform fee\\n   * @dev Only owner\\n   * @dev Allow zero recipient address only of fee is also zero\\n   * @param _feeRecipient Platform fee recipient address\\n   * @param _platformFee platform fee\\n   */\\n  function updatePlatformFee(address _feeRecipient, uint256 _platformFee) external onlyOwner {\\n    require(_feeRecipient != address(0) || _platformFee == 0, \\\"Fee recipient not set\\\");\\n    require(_platformFee <= 1000, \\\"Platform fee exceeded\\\");\\n\\n    emit PlatformFeeUpdated(msg.sender, feeRecipient, platformFee, _feeRecipient, _platformFee);\\n\\n    feeRecipient = _feeRecipient;\\n    platformFee = _platformFee;\\n  }\\n\\n  /**\\n   * @notice Update the tournament creation fee\\n   * @dev Only owner\\n   * @dev Tournament creator should pay this fee when creating the tournament\\n   * @param _tournamentCreationFeeToken Fee token address\\n   * @param _tournamentCreationFeeAmount Fee token amount\\n   */\\n  function updateTournamentCreationFee(address _tournamentCreationFeeToken, uint256 _tournamentCreationFeeAmount)\\n    external\\n    onlyOwner\\n  {\\n    require(_tournamentCreationFeeToken != address(0), \\\"Zero tournament creation fee token\\\");\\n    require(_tournamentCreationFeeAmount > 0, \\\"Zero tournament creation fee\\\");\\n\\n    emit TournamentCreationFeeUpdated(\\n      msg.sender,\\n      tournamentCreationFeeToken,\\n      tournamentCreationFeeAmount,\\n      _tournamentCreationFeeToken,\\n      _tournamentCreationFeeAmount\\n    );\\n\\n    tournamentCreationFeeToken = _tournamentCreationFeeToken;\\n    tournamentCreationFeeAmount = _tournamentCreationFeeAmount;\\n  }\\n}\\n\",\"keccak256\":\"0x2c3b11353736a2b3180091ff62d4d314a3fd6583fba7b0d19d6ba1bf48730e95\",\"license\":\"MIT\"},\"contracts/interfaces/IAddressRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title AddressRegistry Contract Interface\\n * @notice Define the interface used to get addresses in Oparcade\\n * @author David Lee\\n */\\ninterface IAddressRegistry {\\n  /**\\n   * @notice Provide the Oparcade contract address\\n   * @dev Can be zero in case of the Oparcade contract is not registered\\n   * @return address Oparcade contract address\\n   */\\n  function oparcade() external view returns (address);\\n\\n  /**\\n   * @notice Provide the GameRegistry contract address\\n   * @dev Can be zero in case of the GameRegistry contract is not registered\\n   * @return address GameRegistry contract address\\n   */\\n  function gameRegistry() external view returns (address);\\n\\n  /**\\n   * @notice Provide the maintainer address\\n   * @dev Can be zero in case of the maintainer address is not registered\\n   * @return address Maintainer contract address\\n   */\\n  function maintainer() external view returns (address);\\n}\\n\",\"keccak256\":\"0xf647b5b87ae3327fc30b6197655f95bae8317303beced6b426f86a46181a930b\",\"license\":\"MIT\"},\"contracts/interfaces/IOparcade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Oparcade Contract Interface\\n * @notice Define the interface used to get the token deposit and withdrawal info\\n * @author David Lee\\n */\\ninterface IOparcade {\\n  function depositPrize(\\n    address _depositor,\\n    uint256 _gid,\\n    uint256 _tid,\\n    address _token,\\n    uint256 _amount\\n  ) external;\\n\\n  function depositNFTPrize(\\n    address _from,\\n    uint256 _gid,\\n    uint256 _tid,\\n    address _nftAddress,\\n    uint256 _nftType,\\n    uint256[] calldata _tokenIds,\\n    uint256[] calldata _amounts\\n  ) external;\\n}\\n\",\"keccak256\":\"0xebf045e405a5e1302fb82794117720274d51798a1c2df2c5a648a75418bbc1a9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612ede806100206000396000f3fe608060405234801561001057600080fd5b50600436106102415760003560e01c806373d3124011610145578063d0dd986d116100bd578063f3ad65f41161008c578063f483a0ca11610071578063f483a0ca14610564578063f7c00e6314610584578063fbf60be41461059757600080fd5b8063f3ad65f41461053e578063f406c2d11461055157600080fd5b8063d0dd986d146104cd578063e1c3e632146104f8578063e77cb79d14610518578063f2fde38b1461052b57600080fd5b806391dd73f011610114578063aa7ee82c116100f9578063aa7ee82c14610494578063b602d0fd146104a7578063c94113b5146104ba57600080fd5b806391dd73f01461046e578063a7fbe6ba1461048157600080fd5b806373d3124014610418578063823c80fe1461042b5780638d2acf0e146104545780638da5cb5b1461045d57600080fd5b806341c92c0a116101d85780634d1975b4116101a757806370ca09e61161018c57806370ca09e6146103d2578063715018a6146103fd57806371a2304b1461040557600080fd5b80634d1975b4146103b757806364fe328e146103bf57600080fd5b806341c92c0a1461034d578063456972361461036057806346904840146103915780634c678bb3146103a457600080fd5b806326232a2e1161021457806326232a2e146102d85780632a42b461146102e157806339ff00bd1461030c5780634116b1ad1461033a57600080fd5b80630fcf566e14610246578063117a5b901461025b578063196f55e3146102845780631ca2088e146102b7575b600080fd5b610259610254366004612744565b6105aa565b005b61026e610269366004612770565b61071f565b60405161027b91906127b5565b60405180910390f35b6102a7610292366004612770565b606f6020526000908152604090205460ff1681565b604051901515815260200161027b565b6102ca6102c536600461288e565b6107cb565b60405190815260200161027b565b6102ca60725481565b6073546102f4906001600160a01b031681565b6040516001600160a01b03909116815260200161027b565b6102a761031a366004612966565b606e60209081526000928352604080842090915290825290205460ff1681565b610259610348366004612966565b610b38565b6102ca61035b366004612770565b610cdb565b6102ca61036e366004612996565b606c60209081526000938452604080852082529284528284209052825290205481565b6071546102f4906001600160a01b031681565b6102f46103b23660046129cf565b610d59565b6065546102ca565b6102596103cd3660046129cf565b610d91565b6102ca6103e03660046129cf565b606a60209081526000928352604080842090915290825290205481565b610259610ef4565b6102596104133660046129f1565b610f48565b610259610426366004612770565b611069565b6102f4610439366004612770565b6066602052600090815260409020546001600160a01b031681565b6102ca60745481565b6033546001600160a01b03166102f4565b61025961047c366004612a3e565b6111b7565b6102ca61048f366004612a75565b611273565b6102ca6104a2366004612afe565b611490565b6102f46104b53660046129cf565b611552565b6102596104c8366004612744565b61156e565b6102ca6104db3660046129cf565b606860209081526000928352604080842090915290825290205481565b6102ca610506366004612770565b60676020526000908152604090205481565b6102f46105263660046129cf565b6116dc565b610259610539366004612b2a565b6116f8565b6070546102f4906001600160a01b031681565b6102f461055f3660046129cf565b6117c8565b610577610572366004612770565b6118ce565b60405161027b9190612b47565b610259610592366004612b94565b61193a565b6105776105a5366004612770565b611aae565b6033546001600160a01b031633146105f75760405162461bcd60e51b81526020600482018190526024820152600080516020612e8983398151915260448201526064015b60405180910390fd5b6001600160a01b03821615158061060c575080155b6106585760405162461bcd60e51b815260206004820152601560248201527f46656520726563697069656e74206e6f7420736574000000000000000000000060448201526064016105ee565b6103e88111156106aa5760405162461bcd60e51b815260206004820152601560248201527f506c6174666f726d20666565206578636565646564000000000000000000000060448201526064016105ee565b60715460725460408051918252602082018490526001600160a01b0385811693169133917f41340b8520c039756fdade211d2fd26138ba0673031cebf9ae4ae32d38357062910160405180910390a4607180546001600160a01b0319166001600160a01b039390931692909217909155607255565b6065818154811061072f57600080fd5b90600052602060002001600091509050805461074a90612bef565b80601f016020809104026020016040519081016040528092919081815260200182805461077690612bef565b80156107c35780601f10610798576101008083540402835291602001916107c3565b820191906000526020600020905b8154815290600101906020018083116107a657829003601f168201915b505050505081565b6065546000908c90811080156107f057506000818152606f602052604090205460ff16155b6108315760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840cec2daca40d2dcc8caf60731b60448201526064016105ee565b607154607454607354610855926001600160a01b0391821692339290911690611b18565b6108608d8d8d611b87565b915061086e8d838c8c611d13565b60008d8152606e602090815260408083206001600160a01b038e16845290915290205460ff161580156108a15750600089115b156108b2576108b28d8b6001611f67565b60008d8152606e602090815260408083206001600160a01b038c16845290915290205460ff161580156108e55750600087115b156108f6576108f68d896001611f67565b60008d8152606e602090815260408083206001600160a01b038a16845290915290205460ff1615801561092a575060008351115b1561093b5761093b8d876001611f67565b8615610a3157607060009054906101000a90046001600160a01b03166001600160a01b0316638d374f256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610994573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b89190612c24565b604051631de6ba1760e01b8152336004820152602481018f9052604481018490526001600160a01b038a81166064830152608482018a90529190911690631de6ba179060a401600060405180830381600087803b158015610a1857600080fd5b505af1158015610a2c573d6000803e3d6000fd5b505050505b846102d11480610a42575084610483145b15610b2857607060009054906101000a90046001600160a01b03166001600160a01b0316638d374f256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abe9190612c24565b6001600160a01b031663b3a833b8338f858a8a8a8a6040518863ffffffff1660e01b8152600401610af59796959493929190612c7c565b600060405180830381600087803b158015610b0f57600080fd5b505af1158015610b23573d6000803e3d6000fd5b505050505b509b9a5050505050505050505050565b606554829081108015610b5a57506000818152606f602052604090205460ff16155b610b9b5760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840cec2daca40d2dcc8caf60731b60448201526064016105ee565b6000838152606660205260409020546001600160a01b03163314610c015760405162461bcd60e51b815260206004820152601160248201527f4f6e6c792067616d652063726561746f7200000000000000000000000000000060448201526064016105ee565b6001600160a01b038216610c575760405162461bcd60e51b815260206004820152601960248201527f5a65726f2067616d652063726561746f7220616464726573730000000000000060448201526064016105ee565b6000838152606660209081526040918290205491516001600160a01b03858116825290921691859133917fc3ead6876b368fd5723f08611f2323ab6862a20398921fb4c5d8102183752686910160405180910390a45060009182526066602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b606554600090829081108015610d0057506000818152606f602052604090205460ff16155b610d415760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840cec2daca40d2dcc8caf60731b60448201526064016105ee565b60008381526069602052604090205491505b50919050565b606d6020528160005260406000208181548110610d7557600080fd5b6000918252602090912001546001600160a01b03169150829050565b6033546001600160a01b03163314610dd95760405162461bcd60e51b81526020600482018190526024820152600080516020612e8983398151915260448201526064016105ee565b606554829081108015610dfb57506000818152606f602052604090205460ff16155b610e3c5760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840cec2daca40d2dcc8caf60731b60448201526064016105ee565b6103e882607254610e4d9190612cf0565b10610e9a5760405162461bcd60e51b815260206004820152601960248201527f45786365656465642067616d652063726561746f72206665650000000000000060448201526064016105ee565b600083815260676020908152604091829020549151848152859133917f1368505f5ab324c064457c30f01846471732247325d44b676e806cc4cd884a70910160405180910390a45060009182526067602052604090912055565b6033546001600160a01b03163314610f3c5760405162461bcd60e51b81526020600482018190526024820152600080516020612e8983398151915260448201526064016105ee565b610f4660006121b3565b565b6033546001600160a01b03163314610f905760405162461bcd60e51b81526020600482018190526024820152600080516020612e8983398151915260448201526064016105ee565b606554849081108015610fb257506000818152606f602052604090205460ff16155b610ff35760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840cec2daca40d2dcc8caf60731b60448201526064016105ee565b6000858152606960205260409020548590859081106110545760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420746f75726e616d656e7420696e646578000000000000000060448201526064016105ee565b61106087878787611d13565b50505050505050565b6033546001600160a01b031633146110b15760405162461bcd60e51b81526020600482018190526024820152600080516020612e8983398151915260448201526064016105ee565b6065548190811080156110d357506000818152606f602052604090205460ff16155b6111145760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840cec2daca40d2dcc8caf60731b60448201526064016105ee565b6000828152606f60209081526040808320805460ff191660011790556066909152902054606580546001600160a01b0390921691849133917f87c3cbb8e83984547de922e1b60d2b0e975685ec4e9aca63d4eb28317d4da56091908490811061117f5761117f612d08565b9060005260206000200160676000888152602001908152602001600020546040516111ab929190612d1e565b60405180910390a45050565b6033546001600160a01b031633146111ff5760405162461bcd60e51b81526020600482018190526024820152600080516020612e8983398151915260448201526064016105ee565b60655483908110801561122157506000818152606f602052604090205460ff16155b6112625760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840cec2daca40d2dcc8caf60731b60448201526064016105ee565b61126d848484611f67565b50505050565b6033546000906001600160a01b031633146112be5760405162461bcd60e51b81526020600482018190526024820152600080516020612e8983398151915260448201526064016105ee565b8361130b5760405162461bcd60e51b815260206004820152600f60248201527f456d7074792067616d65206e616d65000000000000000000000000000000000060448201526064016105ee565b6001600160a01b0383166113615760405162461bcd60e51b815260206004820152601960248201527f5a65726f2067616d652063726561746f7220616464726573730000000000000060448201526064016105ee565b6103e8826072546113729190612cf0565b106113bf5760405162461bcd60e51b815260206004820152601e60248201527f457863656564656420626173652067616d652063726561746f7220666565000060448201526064016105ee565b606580546001810182556000919091526113fc907f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c701868661268b565b5060655461140c90600190612dce565b600081815260666020908152604080832080546001600160a01b0319166001600160a01b038916908117909155606790925291829020859055905191925090829033907f871f6ba5dcb0133e30d68dd1c00225621e34ea9882970c2578c9136a4113d04f90611480908a908a908990612de5565b60405180910390a4949350505050565b6033546000906001600160a01b031633146114db5760405162461bcd60e51b81526020600482018190526024820152600080516020612e8983398151915260448201526064016105ee565b6065548490811080156114fd57506000818152606f602052604090205460ff16155b61153e5760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840cec2daca40d2dcc8caf60731b60448201526064016105ee565b611549858585611b87565b95945050505050565b60696020528160005260406000208181548110610d7557600080fd5b6033546001600160a01b031633146115b65760405162461bcd60e51b81526020600482018190526024820152600080516020612e8983398151915260448201526064016105ee565b6001600160a01b0382166116175760405162461bcd60e51b815260206004820152602260248201527f5a65726f20746f75726e616d656e74206372656174696f6e2066656520746f6b60448201526132b760f11b60648201526084016105ee565b600081116116675760405162461bcd60e51b815260206004820152601c60248201527f5a65726f20746f75726e616d656e74206372656174696f6e206665650000000060448201526064016105ee565b60735460745460408051918252602082018490526001600160a01b0385811693169133917f45bc4d0779d14a1aad1c23a7c7276ca222ceb0f53ce9ec76d88470974674a58f910160405180910390a4607380546001600160a01b0319166001600160a01b039390931692909217909155607455565b606b6020528160005260406000208181548110610d7557600080fd5b6033546001600160a01b031633146117405760405162461bcd60e51b81526020600482018190526024820152600080516020612e8983398151915260448201526064016105ee565b6001600160a01b0381166117bc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016105ee565b6117c5816121b3565b50565b6065546000908390811080156117ed57506000818152606f602052604090205460ff16155b61182e5760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840cec2daca40d2dcc8caf60731b60448201526064016105ee565b60008481526069602052604090205484908490811061188f5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420746f75726e616d656e7420696e646578000000000000000060448201526064016105ee565b60008681526069602052604090208054869081106118af576118af612d08565b6000918252602090912001546001600160a01b03169695505050505050565b6000818152606b602090815260409182902080548351818402810184019094528084526060939283018282801561192e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611910575b50505050509050919050565b60006119466001612205565b9050801561195e576000805461ff0019166101001790555b611966612320565b6001600160a01b03851615158061197b575083155b6119c75760405162461bcd60e51b815260206004820152601560248201527f46656520726563697069656e74206e6f7420736574000000000000000000000060448201526064016105ee565b6103e8841115611a195760405162461bcd60e51b815260206004820152601560248201527f506c6174666f726d20666565206578636565646564000000000000000000000060448201526064016105ee565b607080546001600160a01b038089166001600160a01b031992831617909255607180548884169083161790556072869055607380549286169290911691909117905560748290558015611aa6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6000818152606d602090815260409182902080548351818402810184019094528084526060939283018282801561192e576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116119105750505050509050919050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b17905261126d908590612393565b60008083611ba45750600084815260676020526040902054611ba7565b50825b600085815260676020526040902054811015611c055760405162461bcd60e51b815260206004820152601d60248201527f4c6f772067616d652063726561746f72206665652070726f706f73656400000060448201526064016105ee565b6103e88382607254611c179190612cf0565b611c219190612cf0565b10611c6e5760405162461bcd60e51b815260206004820152600d60248201527f457863656564656420666565730000000000000000000000000000000000000060448201526064016105ee565b60008581526069602090815260408083208054600181018255908452828420810180546001600160a01b03191633908117909155898552606884528285208286528452828520869055898552606a8452828520828652845293829020879055815185815292830187905294508492889290917f56847de8beaa5954d29e268b8d9134ce21f54e212f7622178d70be7b4febf2d0910160405180910390a4509392505050565b6000848152606c6020908152604080832086845282528083206001600160a01b038616808552908352928190205481519384529183019190915281018290528390859033907f723844a62a9e750c16b3950eaf31d952611c870202a08e144ebb1da04545ea0c9060600160405180910390a48015611df7576000848152606c6020908152604080832086845282528083206001600160a01b0386168452909152902054611df2576000848152606b602090815260408220805460018101825590835291200180546001600160a01b0319166001600160a01b0384161790555b611f37565b60005b6000858152606b6020526040902054811015611f35576000858152606b60205260409020805482908110611e3057611e30612d08565b6000918252602090912001546001600160a01b0384811691161415611f23576000858152606b602052604090208054611e6b90600190612dce565b81548110611e7b57611e7b612d08565b6000918252602080832090910154878352606b909152604090912080546001600160a01b039092169183908110611eb457611eb4612d08565b600091825260208083209190910180546001600160a01b0319166001600160a01b039490941693909317909255868152606b90915260409020805480611efc57611efc612e1e565b600082815260209020810160001990810180546001600160a01b0319169055019055611f35565b80611f2d81612e34565b915050611dfa565b505b6000938452606c602090815260408086209486529381528385206001600160a01b03909316855291909152912055565b6000838152606e602090815260408083206001600160a01b0386168085529083529281902054815160ff9091161515815284151592810192909252859133917f55c3f1ffae9780d4a4ce8073352d34fea806bb40540f99c3e32abaac63de3b1b910160405180910390a4801561203e576000838152606e602090815260408083206001600160a01b038616845290915290205460ff16612039576000838152606d602090815260408220805460018101825590835291200180546001600160a01b0319166001600160a01b0384161790555b61217e565b60005b6000848152606d602052604090205481101561217c576000848152606d6020526040902080548290811061207757612077612d08565b6000918252602090912001546001600160a01b038481169116141561216a576000848152606d6020526040902080546120b290600190612dce565b815481106120c2576120c2612d08565b6000918252602080832090910154868352606d909152604090912080546001600160a01b0390921691839081106120fb576120fb612d08565b600091825260208083209190910180546001600160a01b0319166001600160a01b039490941693909317909255858152606d9091526040902080548061214357612143612e1e565b600082815260209020810160001990810180546001600160a01b031916905501905561217c565b8061217481612e34565b915050612041565b505b6000928352606e602090815260408085206001600160a01b039490941685529290529120805460ff1916911515919091179055565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff1615612293578160ff1660011480156122285750303b155b61228b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105ee565b506000919050565b60005460ff8084169116106123015760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105ee565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff1661238b5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016105ee565b610f4661247d565b60006123e8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166124f19092919063ffffffff16565b80519091501561247857808060200190518101906124069190612e4f565b6124785760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105ee565b505050565b600054610100900460ff166124e85760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016105ee565b610f46336121b3565b6060612500848460008561250a565b90505b9392505050565b6060824710156125825760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105ee565b6001600160a01b0385163b6125d95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105ee565b600080866001600160a01b031685876040516125f59190612e6c565b60006040518083038185875af1925050503d8060008114612632576040519150601f19603f3d011682016040523d82523d6000602084013e612637565b606091505b5091509150612647828286612652565b979650505050505050565b60608315612661575081612503565b8251156126715782518084602001fd5b8160405162461bcd60e51b81526004016105ee91906127b5565b82805461269790612bef565b90600052602060002090601f0160209004810192826126b957600085556126ff565b82601f106126d25782800160ff198235161785556126ff565b828001600101855582156126ff579182015b828111156126ff5782358255916020019190600101906126e4565b5061270b92915061270f565b5090565b5b8082111561270b5760008155600101612710565b6001600160a01b03811681146117c557600080fd5b803561231b81612724565b6000806040838503121561275757600080fd5b823561276281612724565b946020939093013593505050565b60006020828403121561278257600080fd5b5035919050565b60005b838110156127a457818101518382015260200161278c565b8381111561126d5750506000910152565b60208152600082518060208401526127d4816040850160208701612789565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261280f57600080fd5b8135602067ffffffffffffffff8083111561282c5761282c6127e8565b8260051b604051601f19603f83011681018181108482111715612851576128516127e8565b60405293845285810183019383810192508785111561286f57600080fd5b83870191505b8482101561264757813583529183019190830190612875565b60008060008060008060008060008060006101608c8e0312156128b057600080fd5b8b359a5060208c0135995060408c013598506128ce60608d01612739565b975060808c013596506128e360a08d01612739565b955060c08c013594506128f860e08d01612739565b93506101008c0135925067ffffffffffffffff806101208e0135111561291d57600080fd5b61292e8e6101208f01358f016127fe565b9250806101408e0135111561294257600080fd5b506129548d6101408e01358e016127fe565b90509295989b509295989b9093969950565b6000806040838503121561297957600080fd5b82359150602083013561298b81612724565b809150509250929050565b6000806000606084860312156129ab57600080fd5b833592506020840135915060408401356129c481612724565b809150509250925092565b600080604083850312156129e257600080fd5b50508035926020909101359150565b60008060008060808587031215612a0757600080fd5b84359350602085013592506040850135612a2081612724565b9396929550929360600135925050565b80151581146117c557600080fd5b600080600060608486031215612a5357600080fd5b833592506020840135612a6581612724565b915060408401356129c481612a30565b60008060008060608587031215612a8b57600080fd5b843567ffffffffffffffff80821115612aa357600080fd5b818701915087601f830112612ab757600080fd5b813581811115612ac657600080fd5b886020828501011115612ad857600080fd5b60209283019650945050850135612aee81612724565b9396929550929360400135925050565b600080600060608486031215612b1357600080fd5b505081359360208301359350604090920135919050565b600060208284031215612b3c57600080fd5b813561250381612724565b6020808252825182820181905260009190848201906040850190845b81811015612b885783516001600160a01b031683529284019291840191600101612b63565b50909695505050505050565b600080600080600060a08688031215612bac57600080fd5b8535612bb781612724565b94506020860135612bc781612724565b9350604086013592506060860135612bde81612724565b949793965091946080013592915050565b600181811c90821680612c0357607f821691505b60208210811415610d5357634e487b7160e01b600052602260045260246000fd5b600060208284031215612c3657600080fd5b815161250381612724565b600081518084526020808501945080840160005b83811015612c7157815187529582019590820190600101612c55565b509495945050505050565b60006001600160a01b03808a16835288602084015287604084015280871660608401525084608083015260e060a0830152612cba60e0830185612c41565b82810360c0840152612ccc8185612c41565b9a9950505050505050505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612d0357612d03612cda565b500190565b634e487b7160e01b600052603260045260246000fd5b60408152600080845481600182811c915080831680612d3e57607f831692505b6020808410821415612d5e57634e487b7160e01b86526022600452602486fd5b6040880184905260608801828015612d7d5760018114612d8e57612db9565b60ff19871682528282019750612db9565b60008c81526020902060005b87811015612db357815484820152908601908401612d9a565b83019850505b50509690960196909652509095945050505050565b600082821015612de057612de0612cda565b500390565b604081528260408201528284606083013760006060848301015260006060601f19601f8601168301019050826020830152949350505050565b634e487b7160e01b600052603160045260246000fd5b6000600019821415612e4857612e48612cda565b5060010190565b600060208284031215612e6157600080fd5b815161250381612a30565b60008251612e7e818460208701612789565b919091019291505056fe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220c4c9c6f971b1ae511c8cc9bc749675abd7a910a966a8dfbc687dc4328e03abcf64736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102415760003560e01c806373d3124011610145578063d0dd986d116100bd578063f3ad65f41161008c578063f483a0ca11610071578063f483a0ca14610564578063f7c00e6314610584578063fbf60be41461059757600080fd5b8063f3ad65f41461053e578063f406c2d11461055157600080fd5b8063d0dd986d146104cd578063e1c3e632146104f8578063e77cb79d14610518578063f2fde38b1461052b57600080fd5b806391dd73f011610114578063aa7ee82c116100f9578063aa7ee82c14610494578063b602d0fd146104a7578063c94113b5146104ba57600080fd5b806391dd73f01461046e578063a7fbe6ba1461048157600080fd5b806373d3124014610418578063823c80fe1461042b5780638d2acf0e146104545780638da5cb5b1461045d57600080fd5b806341c92c0a116101d85780634d1975b4116101a757806370ca09e61161018c57806370ca09e6146103d2578063715018a6146103fd57806371a2304b1461040557600080fd5b80634d1975b4146103b757806364fe328e146103bf57600080fd5b806341c92c0a1461034d578063456972361461036057806346904840146103915780634c678bb3146103a457600080fd5b806326232a2e1161021457806326232a2e146102d85780632a42b461146102e157806339ff00bd1461030c5780634116b1ad1461033a57600080fd5b80630fcf566e14610246578063117a5b901461025b578063196f55e3146102845780631ca2088e146102b7575b600080fd5b610259610254366004612744565b6105aa565b005b61026e610269366004612770565b61071f565b60405161027b91906127b5565b60405180910390f35b6102a7610292366004612770565b606f6020526000908152604090205460ff1681565b604051901515815260200161027b565b6102ca6102c536600461288e565b6107cb565b60405190815260200161027b565b6102ca60725481565b6073546102f4906001600160a01b031681565b6040516001600160a01b03909116815260200161027b565b6102a761031a366004612966565b606e60209081526000928352604080842090915290825290205460ff1681565b610259610348366004612966565b610b38565b6102ca61035b366004612770565b610cdb565b6102ca61036e366004612996565b606c60209081526000938452604080852082529284528284209052825290205481565b6071546102f4906001600160a01b031681565b6102f46103b23660046129cf565b610d59565b6065546102ca565b6102596103cd3660046129cf565b610d91565b6102ca6103e03660046129cf565b606a60209081526000928352604080842090915290825290205481565b610259610ef4565b6102596104133660046129f1565b610f48565b610259610426366004612770565b611069565b6102f4610439366004612770565b6066602052600090815260409020546001600160a01b031681565b6102ca60745481565b6033546001600160a01b03166102f4565b61025961047c366004612a3e565b6111b7565b6102ca61048f366004612a75565b611273565b6102ca6104a2366004612afe565b611490565b6102f46104b53660046129cf565b611552565b6102596104c8366004612744565b61156e565b6102ca6104db3660046129cf565b606860209081526000928352604080842090915290825290205481565b6102ca610506366004612770565b60676020526000908152604090205481565b6102f46105263660046129cf565b6116dc565b610259610539366004612b2a565b6116f8565b6070546102f4906001600160a01b031681565b6102f461055f3660046129cf565b6117c8565b610577610572366004612770565b6118ce565b60405161027b9190612b47565b610259610592366004612b94565b61193a565b6105776105a5366004612770565b611aae565b6033546001600160a01b031633146105f75760405162461bcd60e51b81526020600482018190526024820152600080516020612e8983398151915260448201526064015b60405180910390fd5b6001600160a01b03821615158061060c575080155b6106585760405162461bcd60e51b815260206004820152601560248201527f46656520726563697069656e74206e6f7420736574000000000000000000000060448201526064016105ee565b6103e88111156106aa5760405162461bcd60e51b815260206004820152601560248201527f506c6174666f726d20666565206578636565646564000000000000000000000060448201526064016105ee565b60715460725460408051918252602082018490526001600160a01b0385811693169133917f41340b8520c039756fdade211d2fd26138ba0673031cebf9ae4ae32d38357062910160405180910390a4607180546001600160a01b0319166001600160a01b039390931692909217909155607255565b6065818154811061072f57600080fd5b90600052602060002001600091509050805461074a90612bef565b80601f016020809104026020016040519081016040528092919081815260200182805461077690612bef565b80156107c35780601f10610798576101008083540402835291602001916107c3565b820191906000526020600020905b8154815290600101906020018083116107a657829003601f168201915b505050505081565b6065546000908c90811080156107f057506000818152606f602052604090205460ff16155b6108315760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840cec2daca40d2dcc8caf60731b60448201526064016105ee565b607154607454607354610855926001600160a01b0391821692339290911690611b18565b6108608d8d8d611b87565b915061086e8d838c8c611d13565b60008d8152606e602090815260408083206001600160a01b038e16845290915290205460ff161580156108a15750600089115b156108b2576108b28d8b6001611f67565b60008d8152606e602090815260408083206001600160a01b038c16845290915290205460ff161580156108e55750600087115b156108f6576108f68d896001611f67565b60008d8152606e602090815260408083206001600160a01b038a16845290915290205460ff1615801561092a575060008351115b1561093b5761093b8d876001611f67565b8615610a3157607060009054906101000a90046001600160a01b03166001600160a01b0316638d374f256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610994573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b89190612c24565b604051631de6ba1760e01b8152336004820152602481018f9052604481018490526001600160a01b038a81166064830152608482018a90529190911690631de6ba179060a401600060405180830381600087803b158015610a1857600080fd5b505af1158015610a2c573d6000803e3d6000fd5b505050505b846102d11480610a42575084610483145b15610b2857607060009054906101000a90046001600160a01b03166001600160a01b0316638d374f256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abe9190612c24565b6001600160a01b031663b3a833b8338f858a8a8a8a6040518863ffffffff1660e01b8152600401610af59796959493929190612c7c565b600060405180830381600087803b158015610b0f57600080fd5b505af1158015610b23573d6000803e3d6000fd5b505050505b509b9a5050505050505050505050565b606554829081108015610b5a57506000818152606f602052604090205460ff16155b610b9b5760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840cec2daca40d2dcc8caf60731b60448201526064016105ee565b6000838152606660205260409020546001600160a01b03163314610c015760405162461bcd60e51b815260206004820152601160248201527f4f6e6c792067616d652063726561746f7200000000000000000000000000000060448201526064016105ee565b6001600160a01b038216610c575760405162461bcd60e51b815260206004820152601960248201527f5a65726f2067616d652063726561746f7220616464726573730000000000000060448201526064016105ee565b6000838152606660209081526040918290205491516001600160a01b03858116825290921691859133917fc3ead6876b368fd5723f08611f2323ab6862a20398921fb4c5d8102183752686910160405180910390a45060009182526066602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b606554600090829081108015610d0057506000818152606f602052604090205460ff16155b610d415760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840cec2daca40d2dcc8caf60731b60448201526064016105ee565b60008381526069602052604090205491505b50919050565b606d6020528160005260406000208181548110610d7557600080fd5b6000918252602090912001546001600160a01b03169150829050565b6033546001600160a01b03163314610dd95760405162461bcd60e51b81526020600482018190526024820152600080516020612e8983398151915260448201526064016105ee565b606554829081108015610dfb57506000818152606f602052604090205460ff16155b610e3c5760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840cec2daca40d2dcc8caf60731b60448201526064016105ee565b6103e882607254610e4d9190612cf0565b10610e9a5760405162461bcd60e51b815260206004820152601960248201527f45786365656465642067616d652063726561746f72206665650000000000000060448201526064016105ee565b600083815260676020908152604091829020549151848152859133917f1368505f5ab324c064457c30f01846471732247325d44b676e806cc4cd884a70910160405180910390a45060009182526067602052604090912055565b6033546001600160a01b03163314610f3c5760405162461bcd60e51b81526020600482018190526024820152600080516020612e8983398151915260448201526064016105ee565b610f4660006121b3565b565b6033546001600160a01b03163314610f905760405162461bcd60e51b81526020600482018190526024820152600080516020612e8983398151915260448201526064016105ee565b606554849081108015610fb257506000818152606f602052604090205460ff16155b610ff35760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840cec2daca40d2dcc8caf60731b60448201526064016105ee565b6000858152606960205260409020548590859081106110545760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420746f75726e616d656e7420696e646578000000000000000060448201526064016105ee565b61106087878787611d13565b50505050505050565b6033546001600160a01b031633146110b15760405162461bcd60e51b81526020600482018190526024820152600080516020612e8983398151915260448201526064016105ee565b6065548190811080156110d357506000818152606f602052604090205460ff16155b6111145760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840cec2daca40d2dcc8caf60731b60448201526064016105ee565b6000828152606f60209081526040808320805460ff191660011790556066909152902054606580546001600160a01b0390921691849133917f87c3cbb8e83984547de922e1b60d2b0e975685ec4e9aca63d4eb28317d4da56091908490811061117f5761117f612d08565b9060005260206000200160676000888152602001908152602001600020546040516111ab929190612d1e565b60405180910390a45050565b6033546001600160a01b031633146111ff5760405162461bcd60e51b81526020600482018190526024820152600080516020612e8983398151915260448201526064016105ee565b60655483908110801561122157506000818152606f602052604090205460ff16155b6112625760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840cec2daca40d2dcc8caf60731b60448201526064016105ee565b61126d848484611f67565b50505050565b6033546000906001600160a01b031633146112be5760405162461bcd60e51b81526020600482018190526024820152600080516020612e8983398151915260448201526064016105ee565b8361130b5760405162461bcd60e51b815260206004820152600f60248201527f456d7074792067616d65206e616d65000000000000000000000000000000000060448201526064016105ee565b6001600160a01b0383166113615760405162461bcd60e51b815260206004820152601960248201527f5a65726f2067616d652063726561746f7220616464726573730000000000000060448201526064016105ee565b6103e8826072546113729190612cf0565b106113bf5760405162461bcd60e51b815260206004820152601e60248201527f457863656564656420626173652067616d652063726561746f7220666565000060448201526064016105ee565b606580546001810182556000919091526113fc907f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c701868661268b565b5060655461140c90600190612dce565b600081815260666020908152604080832080546001600160a01b0319166001600160a01b038916908117909155606790925291829020859055905191925090829033907f871f6ba5dcb0133e30d68dd1c00225621e34ea9882970c2578c9136a4113d04f90611480908a908a908990612de5565b60405180910390a4949350505050565b6033546000906001600160a01b031633146114db5760405162461bcd60e51b81526020600482018190526024820152600080516020612e8983398151915260448201526064016105ee565b6065548490811080156114fd57506000818152606f602052604090205460ff16155b61153e5760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840cec2daca40d2dcc8caf60731b60448201526064016105ee565b611549858585611b87565b95945050505050565b60696020528160005260406000208181548110610d7557600080fd5b6033546001600160a01b031633146115b65760405162461bcd60e51b81526020600482018190526024820152600080516020612e8983398151915260448201526064016105ee565b6001600160a01b0382166116175760405162461bcd60e51b815260206004820152602260248201527f5a65726f20746f75726e616d656e74206372656174696f6e2066656520746f6b60448201526132b760f11b60648201526084016105ee565b600081116116675760405162461bcd60e51b815260206004820152601c60248201527f5a65726f20746f75726e616d656e74206372656174696f6e206665650000000060448201526064016105ee565b60735460745460408051918252602082018490526001600160a01b0385811693169133917f45bc4d0779d14a1aad1c23a7c7276ca222ceb0f53ce9ec76d88470974674a58f910160405180910390a4607380546001600160a01b0319166001600160a01b039390931692909217909155607455565b606b6020528160005260406000208181548110610d7557600080fd5b6033546001600160a01b031633146117405760405162461bcd60e51b81526020600482018190526024820152600080516020612e8983398151915260448201526064016105ee565b6001600160a01b0381166117bc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016105ee565b6117c5816121b3565b50565b6065546000908390811080156117ed57506000818152606f602052604090205460ff16155b61182e5760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840cec2daca40d2dcc8caf60731b60448201526064016105ee565b60008481526069602052604090205484908490811061188f5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420746f75726e616d656e7420696e646578000000000000000060448201526064016105ee565b60008681526069602052604090208054869081106118af576118af612d08565b6000918252602090912001546001600160a01b03169695505050505050565b6000818152606b602090815260409182902080548351818402810184019094528084526060939283018282801561192e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611910575b50505050509050919050565b60006119466001612205565b9050801561195e576000805461ff0019166101001790555b611966612320565b6001600160a01b03851615158061197b575083155b6119c75760405162461bcd60e51b815260206004820152601560248201527f46656520726563697069656e74206e6f7420736574000000000000000000000060448201526064016105ee565b6103e8841115611a195760405162461bcd60e51b815260206004820152601560248201527f506c6174666f726d20666565206578636565646564000000000000000000000060448201526064016105ee565b607080546001600160a01b038089166001600160a01b031992831617909255607180548884169083161790556072869055607380549286169290911691909117905560748290558015611aa6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6000818152606d602090815260409182902080548351818402810184019094528084526060939283018282801561192e576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116119105750505050509050919050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b17905261126d908590612393565b60008083611ba45750600084815260676020526040902054611ba7565b50825b600085815260676020526040902054811015611c055760405162461bcd60e51b815260206004820152601d60248201527f4c6f772067616d652063726561746f72206665652070726f706f73656400000060448201526064016105ee565b6103e88382607254611c179190612cf0565b611c219190612cf0565b10611c6e5760405162461bcd60e51b815260206004820152600d60248201527f457863656564656420666565730000000000000000000000000000000000000060448201526064016105ee565b60008581526069602090815260408083208054600181018255908452828420810180546001600160a01b03191633908117909155898552606884528285208286528452828520869055898552606a8452828520828652845293829020879055815185815292830187905294508492889290917f56847de8beaa5954d29e268b8d9134ce21f54e212f7622178d70be7b4febf2d0910160405180910390a4509392505050565b6000848152606c6020908152604080832086845282528083206001600160a01b038616808552908352928190205481519384529183019190915281018290528390859033907f723844a62a9e750c16b3950eaf31d952611c870202a08e144ebb1da04545ea0c9060600160405180910390a48015611df7576000848152606c6020908152604080832086845282528083206001600160a01b0386168452909152902054611df2576000848152606b602090815260408220805460018101825590835291200180546001600160a01b0319166001600160a01b0384161790555b611f37565b60005b6000858152606b6020526040902054811015611f35576000858152606b60205260409020805482908110611e3057611e30612d08565b6000918252602090912001546001600160a01b0384811691161415611f23576000858152606b602052604090208054611e6b90600190612dce565b81548110611e7b57611e7b612d08565b6000918252602080832090910154878352606b909152604090912080546001600160a01b039092169183908110611eb457611eb4612d08565b600091825260208083209190910180546001600160a01b0319166001600160a01b039490941693909317909255868152606b90915260409020805480611efc57611efc612e1e565b600082815260209020810160001990810180546001600160a01b0319169055019055611f35565b80611f2d81612e34565b915050611dfa565b505b6000938452606c602090815260408086209486529381528385206001600160a01b03909316855291909152912055565b6000838152606e602090815260408083206001600160a01b0386168085529083529281902054815160ff9091161515815284151592810192909252859133917f55c3f1ffae9780d4a4ce8073352d34fea806bb40540f99c3e32abaac63de3b1b910160405180910390a4801561203e576000838152606e602090815260408083206001600160a01b038616845290915290205460ff16612039576000838152606d602090815260408220805460018101825590835291200180546001600160a01b0319166001600160a01b0384161790555b61217e565b60005b6000848152606d602052604090205481101561217c576000848152606d6020526040902080548290811061207757612077612d08565b6000918252602090912001546001600160a01b038481169116141561216a576000848152606d6020526040902080546120b290600190612dce565b815481106120c2576120c2612d08565b6000918252602080832090910154868352606d909152604090912080546001600160a01b0390921691839081106120fb576120fb612d08565b600091825260208083209190910180546001600160a01b0319166001600160a01b039490941693909317909255858152606d9091526040902080548061214357612143612e1e565b600082815260209020810160001990810180546001600160a01b031916905501905561217c565b8061217481612e34565b915050612041565b505b6000928352606e602090815260408085206001600160a01b039490941685529290529120805460ff1916911515919091179055565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff1615612293578160ff1660011480156122285750303b155b61228b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105ee565b506000919050565b60005460ff8084169116106123015760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105ee565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff1661238b5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016105ee565b610f4661247d565b60006123e8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166124f19092919063ffffffff16565b80519091501561247857808060200190518101906124069190612e4f565b6124785760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105ee565b505050565b600054610100900460ff166124e85760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016105ee565b610f46336121b3565b6060612500848460008561250a565b90505b9392505050565b6060824710156125825760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105ee565b6001600160a01b0385163b6125d95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105ee565b600080866001600160a01b031685876040516125f59190612e6c565b60006040518083038185875af1925050503d8060008114612632576040519150601f19603f3d011682016040523d82523d6000602084013e612637565b606091505b5091509150612647828286612652565b979650505050505050565b60608315612661575081612503565b8251156126715782518084602001fd5b8160405162461bcd60e51b81526004016105ee91906127b5565b82805461269790612bef565b90600052602060002090601f0160209004810192826126b957600085556126ff565b82601f106126d25782800160ff198235161785556126ff565b828001600101855582156126ff579182015b828111156126ff5782358255916020019190600101906126e4565b5061270b92915061270f565b5090565b5b8082111561270b5760008155600101612710565b6001600160a01b03811681146117c557600080fd5b803561231b81612724565b6000806040838503121561275757600080fd5b823561276281612724565b946020939093013593505050565b60006020828403121561278257600080fd5b5035919050565b60005b838110156127a457818101518382015260200161278c565b8381111561126d5750506000910152565b60208152600082518060208401526127d4816040850160208701612789565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261280f57600080fd5b8135602067ffffffffffffffff8083111561282c5761282c6127e8565b8260051b604051601f19603f83011681018181108482111715612851576128516127e8565b60405293845285810183019383810192508785111561286f57600080fd5b83870191505b8482101561264757813583529183019190830190612875565b60008060008060008060008060008060006101608c8e0312156128b057600080fd5b8b359a5060208c0135995060408c013598506128ce60608d01612739565b975060808c013596506128e360a08d01612739565b955060c08c013594506128f860e08d01612739565b93506101008c0135925067ffffffffffffffff806101208e0135111561291d57600080fd5b61292e8e6101208f01358f016127fe565b9250806101408e0135111561294257600080fd5b506129548d6101408e01358e016127fe565b90509295989b509295989b9093969950565b6000806040838503121561297957600080fd5b82359150602083013561298b81612724565b809150509250929050565b6000806000606084860312156129ab57600080fd5b833592506020840135915060408401356129c481612724565b809150509250925092565b600080604083850312156129e257600080fd5b50508035926020909101359150565b60008060008060808587031215612a0757600080fd5b84359350602085013592506040850135612a2081612724565b9396929550929360600135925050565b80151581146117c557600080fd5b600080600060608486031215612a5357600080fd5b833592506020840135612a6581612724565b915060408401356129c481612a30565b60008060008060608587031215612a8b57600080fd5b843567ffffffffffffffff80821115612aa357600080fd5b818701915087601f830112612ab757600080fd5b813581811115612ac657600080fd5b886020828501011115612ad857600080fd5b60209283019650945050850135612aee81612724565b9396929550929360400135925050565b600080600060608486031215612b1357600080fd5b505081359360208301359350604090920135919050565b600060208284031215612b3c57600080fd5b813561250381612724565b6020808252825182820181905260009190848201906040850190845b81811015612b885783516001600160a01b031683529284019291840191600101612b63565b50909695505050505050565b600080600080600060a08688031215612bac57600080fd5b8535612bb781612724565b94506020860135612bc781612724565b9350604086013592506060860135612bde81612724565b949793965091946080013592915050565b600181811c90821680612c0357607f821691505b60208210811415610d5357634e487b7160e01b600052602260045260246000fd5b600060208284031215612c3657600080fd5b815161250381612724565b600081518084526020808501945080840160005b83811015612c7157815187529582019590820190600101612c55565b509495945050505050565b60006001600160a01b03808a16835288602084015287604084015280871660608401525084608083015260e060a0830152612cba60e0830185612c41565b82810360c0840152612ccc8185612c41565b9a9950505050505050505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612d0357612d03612cda565b500190565b634e487b7160e01b600052603260045260246000fd5b60408152600080845481600182811c915080831680612d3e57607f831692505b6020808410821415612d5e57634e487b7160e01b86526022600452602486fd5b6040880184905260608801828015612d7d5760018114612d8e57612db9565b60ff19871682528282019750612db9565b60008c81526020902060005b87811015612db357815484820152908601908401612d9a565b83019850505b50509690960196909652509095945050505050565b600082821015612de057612de0612cda565b500390565b604081528260408201528284606083013760006060848301015260006060601f19601f8601168301019050826020830152949350505050565b634e487b7160e01b600052603160045260246000fd5b6000600019821415612e4857612e48612cda565b5060010190565b600060208284031215612e6157600080fd5b815161250381612a30565b60008251612e7e818460208701612789565b919091019291505056fe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220c4c9c6f971b1ae511c8cc9bc749675abd7a910a966a8dfbc687dc4328e03abcf64736f6c634300080b0033",
  "devdoc": {
    "author": "David Lee",
    "kind": "dev",
    "methods": {
      "addGame(string,address,uint256)": {
        "params": {
          "_baseGameCreatorFee": "Base game creator fee",
          "_gameCreator": "Game creator address",
          "_gameName": "Game name to add"
        }
      },
      "createTournamentByDAO(uint256,uint256,uint256)": {
        "details": "Only ownerIf the proposed game creaetor fee is 0, the base game creator fee is appliedThe prize pool for the tournament that the owner created is initialized on Oparcade contract",
        "params": {
          "_gid": "Game ID",
          "_proposedGameCreatorFee": "Proposed game creator fee",
          "_tournamentCreatorFee": "Tournament creator fee"
        },
        "returns": {
          "tid": "Tournament ID created"
        }
      },
      "createTournamentByUser(uint256,uint256,uint256,address,uint256,address,uint256,address,uint256,uint256[],uint256[])": {
        "details": "Anyone can create the tournament and initialize the prize pool with tokens and NFTsTournament creator should set all params necessary for the tournament in 1 tx andthe params set is immutableTournament creator should pay fees to create the tournamentand the fee token address and fee token amount are set by the ownerIf the proposed game creaetor fee is 0, the base game creator fee is appliedNFT type to initialize the prize pool should be either 721 or 1155",
        "params": {
          "_amountToAddPrizePool": "Token amount to initialize the prize pool",
          "_amountsToAddPrizePool": "NFT token amount list to initialize the prize pool",
          "_depositTokenAddress": "Deposit token address for playing the tournament",
          "_depositTokenAmount": "Deposit token amount for playing the tournament",
          "_gid": "Game ID",
          "_nftAddressToAddPrizePool": "NFT address to initialize the prize pool",
          "_nftTypeToAddPrizePool": "NFT type to initialize the prize pool",
          "_proposedGameCreatorFee": "Tournament creator fee",
          "_tokenIdsToAddPrizePool": "NFT token Id list to initialize the prize pool",
          "_tokenToAddPrizePool": "Token address to initialize the prize pool"
        },
        "returns": {
          "tid": "Tournament ID created"
        }
      },
      "gameCount()": {
        "returns": {
          "_0": "(uint256) Game count created"
        }
      },
      "getDepositTokenList(uint256)": {
        "params": {
          "_gid": "Game ID"
        },
        "returns": {
          "_0": "(address[]) Deposit token list of the game"
        }
      },
      "getDistributableTokenList(uint256)": {
        "params": {
          "": "(address[]) Distributable token list of the game",
          "_gid": "Game ID"
        }
      },
      "getTournamentCount(uint256)": {
        "params": {
          "_gid": "Game ID"
        },
        "returns": {
          "_0": "(uint256) Number of the tournament"
        }
      },
      "getTournamentCreator(uint256,uint256)": {
        "params": {
          "_gid": "Game ID",
          "_tid": "Tournament ID"
        },
        "returns": {
          "_0": "(address) Tournament creator address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeGame(uint256)": {
        "details": "Game is not removed from the games array, just set it deprecated",
        "params": {
          "_gid": "Game ID"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateBaseGameCreatorFee(uint256,uint256)": {
        "details": "Tournament creator fee is the royality that will be transferred to the tournament creator addressTournament creator can propose the game creator fee when creating the tournamentbut it can't be less than the base game creator fee",
        "params": {
          "_baseGameCreatorFee": "Base game creator fee",
          "_gid": "Game ID"
        }
      },
      "updateDepositTokenAmount(uint256,uint256,address,uint256)": {
        "details": "Only ownerOnly tokens with an amount greater than zero is valid for the deposit",
        "params": {
          "_amount": "Token amount",
          "_gid": "Game ID",
          "_tid": "Tournament ID",
          "_token": "Token address to allow/disallow the deposit"
        }
      },
      "updateDistributableTokenAddress(uint256,address,bool)": {
        "details": "Only owner",
        "params": {
          "_gid": "Game ID",
          "_isDistributable": "true: distributable false: not distributable",
          "_token": "Token address to allow/disallow the deposit"
        }
      },
      "updateGameCreator(uint256,address)": {
        "params": {
          "_gameCreator": "Game creator address",
          "_gid": "Game ID"
        }
      },
      "updatePlatformFee(address,uint256)": {
        "details": "Only ownerAllow zero recipient address only of fee is also zero",
        "params": {
          "_feeRecipient": "Platform fee recipient address",
          "_platformFee": "platform fee"
        }
      },
      "updateTournamentCreationFee(address,uint256)": {
        "details": "Only ownerTournament creator should pay this fee when creating the tournament",
        "params": {
          "_tournamentCreationFeeAmount": "Fee token amount",
          "_tournamentCreationFeeToken": "Fee token address"
        }
      }
    },
    "stateVariables": {
      "addressRegistry": {
        "details": "AddressRegistry"
      },
      "appliedGameCreatorFees": {
        "details": "Game ID -> Tournament ID -> Game creator fee applied to the tournament"
      },
      "baseGameCreatorFees": {
        "details": "Game ID -> Base game creator fee"
      },
      "depositTokenAmount": {
        "details": "Game ID -> Tournament ID -> Token address -> Deposit amount"
      },
      "depositTokenList": {
        "details": "Game ID -> Deposit token list"
      },
      "distributable": {
        "details": "Game ID -> Token address -> Bool"
      },
      "distributableTokenList": {
        "details": "Game ID -> Distributable token list"
      },
      "feeRecipient": {
        "details": "Platform fee recipient"
      },
      "gameCreators": {
        "details": "Game ID -> Game creator"
      },
      "games": {
        "details": "Game name array"
      },
      "isDeprecatedGame": {
        "details": "Game ID -> Bool"
      },
      "platformFee": {
        "details": "Platform fee"
      },
      "tournamentCreationFeeAmount": {
        "details": "Tournament creation fee token amount"
      },
      "tournamentCreationFeeToken": {
        "details": "Tournament creation fee token address"
      },
      "tournamentCreatorFees": {
        "details": "Game ID -> Tournament ID -> Tournament creator fee"
      },
      "tournamentCreators": {
        "details": "Game ID -> Tournament creator list"
      }
    },
    "title": "GameRegistry",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addGame(string,address,uint256)": {
        "notice": "Add the new game"
      },
      "createTournamentByDAO(uint256,uint256,uint256)": {
        "notice": "Create the tournament"
      },
      "createTournamentByUser(uint256,uint256,uint256,address,uint256,address,uint256,address,uint256,uint256[],uint256[])": {
        "notice": "Create the tournament"
      },
      "gameCount()": {
        "notice": "Returns the number of games added in games array"
      },
      "getDepositTokenList(uint256)": {
        "notice": "Returns the deposit token list of the game"
      },
      "getDistributableTokenList(uint256)": {
        "notice": "Returns the distributable token list of the game"
      },
      "getTournamentCount(uint256)": {
        "notice": "Returns the number of the tournaments of the specific game"
      },
      "getTournamentCreator(uint256,uint256)": {
        "notice": "Returns the tournament creator address of the specific game/tournament"
      },
      "removeGame(uint256)": {
        "notice": "Remove the exising game"
      },
      "updateBaseGameCreatorFee(uint256,uint256)": {
        "notice": "Update the base game creator fee"
      },
      "updateDepositTokenAmount(uint256,uint256,address,uint256)": {
        "notice": "Update deposit token amount"
      },
      "updateDistributableTokenAddress(uint256,address,bool)": {
        "notice": "Update distributable token address"
      },
      "updateGameCreator(uint256,address)": {
        "notice": "Update the game creator"
      },
      "updatePlatformFee(address,uint256)": {
        "notice": "Update the platform fee"
      },
      "updateTournamentCreationFee(address,uint256)": {
        "notice": "Update the tournament creation fee"
      }
    },
    "notice": "This contract stores all info related to the game and tournament",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 130,
        "contract": "contracts/GameRegistry.sol:GameRegistry",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 133,
        "contract": "contracts/GameRegistry.sol:GameRegistry",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1490,
        "contract": "contracts/GameRegistry.sol:GameRegistry",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/GameRegistry.sol:GameRegistry",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 122,
        "contract": "contracts/GameRegistry.sol:GameRegistry",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 5483,
        "contract": "contracts/GameRegistry.sol:GameRegistry",
        "label": "games",
        "offset": 0,
        "slot": "101",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 5488,
        "contract": "contracts/GameRegistry.sol:GameRegistry",
        "label": "gameCreators",
        "offset": 0,
        "slot": "102",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 5493,
        "contract": "contracts/GameRegistry.sol:GameRegistry",
        "label": "baseGameCreatorFees",
        "offset": 0,
        "slot": "103",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 5500,
        "contract": "contracts/GameRegistry.sol:GameRegistry",
        "label": "appliedGameCreatorFees",
        "offset": 0,
        "slot": "104",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 5506,
        "contract": "contracts/GameRegistry.sol:GameRegistry",
        "label": "tournamentCreators",
        "offset": 0,
        "slot": "105",
        "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 5513,
        "contract": "contracts/GameRegistry.sol:GameRegistry",
        "label": "tournamentCreatorFees",
        "offset": 0,
        "slot": "106",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 5519,
        "contract": "contracts/GameRegistry.sol:GameRegistry",
        "label": "depositTokenList",
        "offset": 0,
        "slot": "107",
        "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 5528,
        "contract": "contracts/GameRegistry.sol:GameRegistry",
        "label": "depositTokenAmount",
        "offset": 0,
        "slot": "108",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))"
      },
      {
        "astId": 5534,
        "contract": "contracts/GameRegistry.sol:GameRegistry",
        "label": "distributableTokenList",
        "offset": 0,
        "slot": "109",
        "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 5541,
        "contract": "contracts/GameRegistry.sol:GameRegistry",
        "label": "distributable",
        "offset": 0,
        "slot": "110",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 5546,
        "contract": "contracts/GameRegistry.sol:GameRegistry",
        "label": "isDeprecatedGame",
        "offset": 0,
        "slot": "111",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 5550,
        "contract": "contracts/GameRegistry.sol:GameRegistry",
        "label": "addressRegistry",
        "offset": 0,
        "slot": "112",
        "type": "t_contract(IAddressRegistry)8223"
      },
      {
        "astId": 5553,
        "contract": "contracts/GameRegistry.sol:GameRegistry",
        "label": "feeRecipient",
        "offset": 0,
        "slot": "113",
        "type": "t_address"
      },
      {
        "astId": 5556,
        "contract": "contracts/GameRegistry.sol:GameRegistry",
        "label": "platformFee",
        "offset": 0,
        "slot": "114",
        "type": "t_uint256"
      },
      {
        "astId": 5559,
        "contract": "contracts/GameRegistry.sol:GameRegistry",
        "label": "tournamentCreationFeeToken",
        "offset": 0,
        "slot": "115",
        "type": "t_address"
      },
      {
        "astId": 5562,
        "contract": "contracts/GameRegistry.sol:GameRegistry",
        "label": "tournamentCreationFeeAmount",
        "offset": 0,
        "slot": "116",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IAddressRegistry)8223": {
        "encoding": "inplace",
        "label": "contract IAddressRegistry",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => mapping(address => uint256)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}